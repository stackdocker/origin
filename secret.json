{
    "kind": "Secret",
    "apiVersion": "v1",
    "metadata": {
        "name": "openshift-config",
        "creationTimestamp": null
    },
    "data": {
        "admin.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREVENDQWZXZ0F3SUJBZ0lCQmpBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReldoY05NVGd3TlRBMgpNREUwT1RRMFdqQTNNUjR3SEFZRFZRUUtFeFZ6ZVhOMFpXMDZZMngxYzNSbGNpMWhaRzFwYm5NeEZUQVRCZ05WCkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQU1sbTBEK0QxeGJyMk1vUitDMGxEZjgrc1NvaE9QWUVlUFlHbDhpUGRhcENjblg4ZUV1Q1pGaUN6UVhVSmViSQpBa3YzZmQzN1R4SlA2ejRCc0daakdRODZ0S2VZWXp0RURweGpRRkpGcW1YbFdZb2VtSkd6Zi92ODVZUWg2VGpNCnd4T29WQy9UejdlaDdNbk1OOCtjVi9YbTVWQ0crNm1QUzh0azR0Qmx6TS8zVktLaENub2Q1RWdrc0ZmL2J3ZWYKU0JvMXJPLzdBNGp4NGl0VmFMUWdwSHE0WmhWRjhKMGEza2xETlpkQWIrS3NGQzExNm1lVUhtc1gvRGVDZFpLbgpwc095dnNiRCtvcDh3WW5ZSStSN294QjBHcExCbkdHcFRUQWN3clhZbzN2K2tIazdOekw0Y0JnYUdjMEtDT3ZyCnZZZW9MSzZ0QXZzNlpJRW9YQ0hHekNFQ0F3RUFBYU0xTURNd0RnWURWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWQKSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBTFRIbkxhb0pPMlk3RUhEZStPZHFNeFRDalJSYitmZHBjdkhnVU45aEJXNmFkQ3BXNERLMEJWeWV4WWxxKzJMCk1KSGxXczhwbjVYMklsbnVsVDhkWk5yZThDVkJOaFRwYnkzdmpocjZkOFpwcFBZWHVJZ0YrWjNPY1BIYXAvbE8KREd5blhhMWQxcEtlOTNQeXE2V1NWSXBtc2g4Mnd5MmNMS1ZvL3Q5OGhvUnFzelVaVk5uR0ZOeXV1MEVKNDVxRgp1bWI5dW8xOUpmWGxieU5wdEEwME9yYS9TNW9ZRFZXQlBENE9BRG5Qdzd1RlhTQnJ5eUxoa1haS2JwcU4zQysxCkdiOElvdWE3OTFsSzJrcVFFaVVIQ1lBMHA3d3plM1lDQlZFcDlKZjByK2cwcXAwTUI4NmFiZ2lyaWQyQUVyb3AKMWlSbzBCTTk0UzZRcVkyZDdNcnhydzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "admin.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeVdiUVA0UFhGdXZZeWhINExTVU4vejZ4S2lFNDlnUjQ5Z2FYeUk5MXFrSnlkZng0ClM0SmtXSUxOQmRRbDVzZ0NTL2Q5M2Z0UEVrL3JQZ0d3Wm1NWkR6cTBwNWhqTzBRT25HTkFVa1dxWmVWWmloNlkKa2JOLysvemxoQ0hwT016REU2aFVMOVBQdDZIc3ljdzN6NXhYOWVibFVJYjdxWTlMeTJUaTBHWE16L2RVb3FFSwplaDNrU0NTd1YvOXZCNTlJR2pXczcvc0RpUEhpSzFWb3RDQ2tlcmhtRlVYd25ScmVTVU0xbDBCdjRxd1VMWFhxClo1UWVheGY4TjRKMWtxZW13N0sreHNQNmluekJpZGdqNUh1akVIUWFrc0djWWFsTk1CekN0ZGlqZS82UWVUczMKTXZod0dCb1p6UW9JNit1OWg2Z3NycTBDK3pwa2dTaGNJY2JNSVFJREFRQUJBb0lCQVFDWUZhUnlJZ3U5U2xIRgpuYllyMlF4dHo1aVhPTWs3dGZybHhlcStUOTdKdUMyWS9SS1Y2cHY5M3FBVm83TVBSNys4UCtMelNyL1dFeldQCitGU05ySTJTMjREcUFnQUZGQXA0ZTlacGlpUDNtQzU2UjBwczFBQjBkKytWVE1wQjB4WUlkUmRGbW93RG5pb2gKNUszTWY4SklkWmg2cThQRXNlbkphS0NDUUMxZWFJNnR1OVpSbDVjSFlwMW04TjJzamVWVEhKbWFnLzdzWGdDRwp1V0QyVFQ2Qjc4SENIZUNTclRnNzlLbzNDdHpndnRDOUNncG5zTlZyYUZiN2ZkbGdZVWxMUHZVS2laNkpBaTJsCk5wMkYyV1IxNDI5Znk3czkwQkN4MXFBbk1vY0hLZjhFYUtmMlNHTC9HTGh5NlRNUWZEb0tDbm95UjFYTkxrTDMKUVVUNzV2bUZBb0dCQU45OVg4Sm5SbkN4b3kxK0dvUWk0Q1BieWQzOW83TzVSK3JTcXdEUTJVTDY3UjBBVkhGeQpHellBOWxGWm5QMWZUOURZcWY3QlVMMkhpaHRyMGt3aUVubnJPSnZqMnZqMHFQTSs2amJaUEliTWdJd1Yybml6Cno4ZUduR0x1aFRkYTFvRnhoS2dTaWRjWTJvMXV1Y0hDR1l5MkFpNEFnV3V6UXp6cldpWEJGZndmQW9HQkFPYXkKNC81bzVkd2pDS25wN0d6bFZxMFkzeVkyV2M3WU5idUF2RE84a3dwSjlXemJwb3NqNmJSRVhVU2FPaW9VV2k1WApLcmlwY3MyQWwrVmI1MEkrRTV0ZHg5TjVvajJ5Sm5tbStBZXBQZWlnNEpkczZHZ1NhZStDZ3d4dDI0emxZNWp6CndnVXVvb2wxMzdhRTBuMVFoekpxZlFvL2htdS9yNXBQdjRmVUtpKy9Bb0dCQUtFdEtnSnB1TU5OV1FGV0VJbDcKSFdxKzk3YkJWVzRvRVZXbzJPcWR0Qkk2SlFibFZnRDY2ZVRvakx2ZWhQbTE0em9iQjM1U3JJZ0RWL2F1cTl0OApOeGIyTEwxQWRvdFU1d09HUENPU1I3UnZoOFYvZlMvUGZlbkhpc0ZPZzRTSVhtcThFNCtpendYeFJxejVUYjRPCjNaNDlKUlZJQ0E1RUdobTFJaTVZTWlMQkFvR0FmWURTZ2NRRlVIWUtyNDBmM3JvQkpsZ0NoZUpKaHpxZU9LdzMKTnBvZkVCamVHR09DUGUzQ3BSd1A5Vk5GMDBDUk11YWV5aWo4MklsZG1Sd2ZPaTFWTTArWWR4YVR5YWFTUWRvdwowdElpYU55a2NoeUFicVdkMWZ1VldYeW1WUWN4NExLeldXaGVhaE9qS2NNbVU2QXNmS1ByOUZoTXcyOWJrOEpRCnV3OFVDRGNDZ1lFQXluaFcyYWVMQW15YTFBbFZESUlOWHp3Q05FejlWWW1VVXRJYmlrbm14OGhnMHhIMkltbHkKMzhabTM3dWJyekdKek9XbEZUY3JTTkZqRi9hbnllSmF4RTRPUTJVUCs0TVU4TWJSTHBzRENRMWRkMEtDMmlqdgpSZGFxSHJOaW5UelVmZm94QUhYTEs1cTJTOU40T3JtOEljSEF1Qkd2NWNJV1A2RWFoWnB1a2VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "admin.kubeconfig": "",
        "ca-bundle.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReFdoY05NakV3TlRBMQpNREUwT1RReVdqQW1NU1F3SWdZRFZRUUREQnR2Y0dWdWMyaHBablF0YzJsbmJtVnlRREUwTmpJME9Ua3pPREV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURtMmRUNk5QdmtBWHJqTndvaEw2Y0oKL3had2tYaHhFVTFGZjBXcTlJSUR6c3NOWXhGMUxkSmdZSm5rTm1MejRFY0o5blAwSy93T0F6R1hDMG1uclRjeQptcG1QcFhwNnFXZzJhcWpKckVxWEJpK0tmSEp1SU1SWFJ2WDMrMlB4clJueERzSlJhVjVmOXpDK3RhZXo0YitTCmU3bWhTVlJxK09aUGhuQVRMT2J2YktmRkRGL3hHR3Q1RCsyb0pOWDVxN3pFM2JOWWdFY2tNblZUNHhpcEd2QVcKMDFWclQ4aXNRZkk5d0szY2ZGWktlMURocldDekhsV0VnNUdLUWszSlN6dGpjRmxyTlNXWHh2c2ZJcCtBMEw3LwpWZkx3V1NmUTI5ODRUc3Q1Ull0dVJweTZRZEt4MGVqeW1qcWRZMUpBWENEYmdGVU1iS1U4YjliZ3RuL001Vi9uCkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQ0ZLNSsrakNkU2g3em44SDlqbGRUVEx5N05rSkpkbHJtU1p2c2FtMk5ybkNDRgpxajVxM2ZHcjkvV2krakgvczZHbEgzWFpPZ3J5Rm8zTFVMZ1dsUStaektOSUxzVW4zMlpMTjVObHA5b1RRSU9QCmFwbWJIYldEQnNQZXcyT2xGSTNhV2pVWG5PNGVtamFPbjl3S0NqZmpEc1ZFL0ZSODBZK0E4YUNTU3k4RUxOMjUKN3VPcXFvMmpYMHVPVnNSZDFUcEZ2N21rcnZOZlFKYVkwNzhTVlZuZk1YZFR4L1JFVHZHVExlRm1IalAyRDdsVQpuUDIzOHB6dWNSS1ZOTlFVYy9qM0pvd0llaXU5Z1N6YzJkaUFyTXNJNHpjMzc2S3RuZXVXSFZMSTFJVlIyNjJ3ClQ5Qjk3NXNhOFU0M1dxb09sL2pHTklkWFo3RHBUNHNTYVlHNVorNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "ca.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReFdoY05NakV3TlRBMQpNREUwT1RReVdqQW1NU1F3SWdZRFZRUUREQnR2Y0dWdWMyaHBablF0YzJsbmJtVnlRREUwTmpJME9Ua3pPREV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURtMmRUNk5QdmtBWHJqTndvaEw2Y0oKL3had2tYaHhFVTFGZjBXcTlJSUR6c3NOWXhGMUxkSmdZSm5rTm1MejRFY0o5blAwSy93T0F6R1hDMG1uclRjeQptcG1QcFhwNnFXZzJhcWpKckVxWEJpK0tmSEp1SU1SWFJ2WDMrMlB4clJueERzSlJhVjVmOXpDK3RhZXo0YitTCmU3bWhTVlJxK09aUGhuQVRMT2J2YktmRkRGL3hHR3Q1RCsyb0pOWDVxN3pFM2JOWWdFY2tNblZUNHhpcEd2QVcKMDFWclQ4aXNRZkk5d0szY2ZGWktlMURocldDekhsV0VnNUdLUWszSlN6dGpjRmxyTlNXWHh2c2ZJcCtBMEw3LwpWZkx3V1NmUTI5ODRUc3Q1Ull0dVJweTZRZEt4MGVqeW1qcWRZMUpBWENEYmdGVU1iS1U4YjliZ3RuL001Vi9uCkFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQ0ZLNSsrakNkU2g3em44SDlqbGRUVEx5N05rSkpkbHJtU1p2c2FtMk5ybkNDRgpxajVxM2ZHcjkvV2krakgvczZHbEgzWFpPZ3J5Rm8zTFVMZ1dsUStaektOSUxzVW4zMlpMTjVObHA5b1RRSU9QCmFwbWJIYldEQnNQZXcyT2xGSTNhV2pVWG5PNGVtamFPbjl3S0NqZmpEc1ZFL0ZSODBZK0E4YUNTU3k4RUxOMjUKN3VPcXFvMmpYMHVPVnNSZDFUcEZ2N21rcnZOZlFKYVkwNzhTVlZuZk1YZFR4L1JFVHZHVExlRm1IalAyRDdsVQpuUDIzOHB6dWNSS1ZOTlFVYy9qM0pvd0llaXU5Z1N6YzJkaUFyTXNJNHpjMzc2S3RuZXVXSFZMSTFJVlIyNjJ3ClQ5Qjk3NXNhOFU0M1dxb09sL2pHTklkWFo3RHBUNHNTYVlHNVorNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "ca.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNXRuVStqVDc1QUY2NHpjS0lTK25DZjhXY0pGNGNSRk5SWDlGcXZTQ0E4N0xEV01SCmRTM1NZR0NaNURaaTgrQkhDZlp6OUN2OERnTXhsd3RKcDYwM01wcVpqNlY2ZXFsb05tcW95YXhLbHdZdmlueHkKYmlERVYwYjE5L3RqOGEwWjhRN0NVV2xlWC9jd3ZyV25zK0cva251NW9VbFVhdmptVDRad0V5em03MnlueFF4Zgo4UmhyZVEvdHFDVFYrYXU4eE4yeldJQkhKREoxVStNWXFScndGdE5WYTAvSXJFSHlQY0N0M0h4V1NudFE0YTFnCnN4NVZoSU9SaWtKTnlVczdZM0JaYXpVbGw4YjdIeUtmZ05DKy8xWHk4RmtuME52Zk9FN0xlVVdMYmthY3VrSFMKc2RIbzhwbzZuV05TUUZ3ZzI0QlZER3lsUEcvVzRMWi96T1ZmNXdJREFRQUJBb0lCQVFDb0JIVlpZa1RQRHpDMAp2UE4zY2VwZWdUV0EycS9SZzJrOUlzTy9DRlMwbHNiOHlGVUZkME05K0RFcGcxZ0Q3Z0ZtUStUakd6eEpxcE5tClBzWHQ3MGxVWUdkUndIdmpXUGRMVzlmYmFMV2xNOUJZTi9sRkpENGkwN2ZrTkNqcTFqVWlXTDZmYUZSUy9tT1EKK2ovRDBaT1A5dE1GaTR5UWl2VjlmZmlHVEZFTWdpT3ovTW1zY2hRTFBXdW9xVEpkVFZ5R3ZuaEcvd0c5NW5xYQpidXZUSGN6QStVQUNPZHBqazJqS0hGamUzWU0vZVF3U2lDRXVrdmNuZ01QQXJiRjVZd3E5SEwwVU9WTVFLcWhHCkZWRW1pQlZyNW1mY0JPZUR4UEpUalRuSEZxWVBpdEhGdWlTdUdIbTJId0Z6K1RJNmVVYzJaUUE1TnN3bGt0NUUKU0FXMWJsNVJBb0dCQVBiUlJKU2V0VHkvUENBb0pSM0tjY1ZXWC9QNGs2WFl6QmJKSi9rOEkrSjVSa2RnK1IvbgpXeGw1TjhwU0FxcVR6dW5RTkdZajFCRW93cXN0R3MvVUNsaEIxNnQrY0dMMnFLNFMzMlViVDhKVDVONGhlQTJDCjBJSHJNV3M5d1FYOWp5Y01wRVFYNHVXUTJLVjlBV211bklkM21DUnQ5d0lQV1NhZjJZYTJWZ0NKQW9HQkFPOXcKZnZNdEExZHhpdEZPQkZSZk5YTE5VSytyRytTbWx0WDhGdlMzQnJGN1J3S25pZEhJQ0NMZlQxVldCdW5IQ29yQwowQnBFL1J6V3VPOFNkd0RPQmZ2ZDZvWmk3OUZ0eTV3Q0tLVG51NHFFOEp1TFNlbHNrR0VnRGxCNmk1Z1pyT3JQClRmT2cwdk5FVjFzaTVBWlFvTWM3UVpzaTdzdVZDckJTaE41YVMrRHZBb0dCQUoxdEF1b3NoSHJYbXZrRHdoREwKVkYvQzVQYk80UlhTUHZKMW9WcDJBb2xzUXVnNk1Rd3BXOURXb1VBWnFQdTF4UzhiRHFEclQxTVdoWHY3Qy9QdApVaC9TOTBXNkl1THNZdENNMXhJOUpsVlRmMUl6Vk1pQlhJN1JQYmNpTDJDcnhzZm9aMG5MVm55SU03YnlFWm1mCnR0VXM4Y3lpbXY4a1hQK215MjhDRTc3SkFvR0FNSHB4YWFEaWZWRGl6MC9oZG9lMFZhTVdSQXI3NGNhTTRaUmgKdlhoVkpaZ1ZINGQyVXdBU0RhVnk5WTh1WlNURWtLV3k1cTZ6SktTZzJ0NjlNMitETEtTWXVFN055WFJXZGliRgp2ZVdoUmdGMmliZWc1bDd4dUloNS9YZGlUaEJjdjBucnVYa0ZYUFdvVGk1NVJvSUttMnYyODRjV0hDZjMrdzBxCkU2N3FrQWNDZ1lFQWh6N29CMldGRnJ4bTdxQlZxQjloQmdkbjdoK25vYzNQUDlONUNqdlhOQ3ljSlppaWQzMWoKUCtjRDhKT2JjQ3NWaVEvK1huQXJ4T1pkNFRzb0tJYkllQ1BiWEpTclBhQUFad2wzTEsra2s1bTVQQ3VUMU51Ywo1bHQ3Vk1QTlZQMHUxRmZ3UzhObjNYQlRKd0FOS296MG5JaElJdm53NXQxQnlHQys3TXgyNVBRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "ca.serial.txt": "MTA=",
        "etcd.server.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVPekNDQXlPZ0F3SUJBZ0lCRURBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05URXdNak0wTURRMFdoY05NVGd3TlRFdwpNak0wTURRMVdqQVVNUkl3RUFZRFZRUURFd2t4TUM0d0xqSXVNVFV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUURERXJVYVFHaEhHVGVuTnBQYklaZTNPUXVTRDQ0cVNITHNjSmE5YnFaNEdyY3MKcnJGVjNBc1MwaEt3V2xoQmdLcGlNNjhLTHBNVlRMeDdOOVBnZis0MVhSUFhDWk9JOEQyclpuUmdhTW9icFhFZgpVc3E2c2YyYktzV2cyZU9Gd3ovWnNhS1J4MFRYKzliK21QWG9BdFZHeUtINHFUM0dBQm5OVUI1OVdvNTd3MWE2CmNiUHZDREE4K2Q4bmtZK0J4RlBvMk5tQi9NV1YvWFpQM2kzMnBzT1E1Mm11UEpmVEc0WmhucXh0L0hKdjE5eDgKL1N6ZFAxRTNRUzI4TlZYQ3hHcDBtNXJaSXNCZDBuZjh5VWJ1QWdJM0ZvalFpOGw3a242R3lheERSYklZd3lpVgo4WHRDV0RvYkZLQkx3dHVuV01mb0gzSlZxc3dwZnRYQUZrNG5JNnpqQWdNQkFBR2pnZ0dFTUlJQmdEQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQ0MKQVVrR0ExVWRFUVNDQVVBd2dnRThnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQwpGbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11ClkyeDFjM1JsY2k1c2IyTmhiSUlKYkc5allXeG9iM04wZ2dsdmNHVnVjMmhwWm5TQ0VXOXdaVzV6YUdsbWRDNWsKWldaaGRXeDBnaFZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1PQ0kyOXdaVzV6YUdsbWRDNWtaV1poZFd4MApMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNnZ2t4TUM0d0xqSXVNVFdDQ0RFd0xqRXVNQzR4Z2dneE1DNHpMakF1Ck1ZSUtNVEF1TXk0d0xqRTNPWUlKTVRJM0xqQXVNQzR4Z2dveE56SXVNVGN1TUM0eGdnc3hOekl1TVRjdU5DNDEKTUljRUNnQUNENGNFQ2dFQUFZY0VDZ01BQVljRUNnTUFzNGNFZndBQUFZY0VyQkVBQVljRXJCRUVNakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQUNaT3ZyV3lSdjJRa3J3SlVsYXRqa3psdVNFZFJDdk5PVWZzTkpzbE1ZbGpvCjZQeTJQaDNzZC9qSVVyMERJMytLKzJmVkk0Z3Z2VGFEOFhPbWo0aUg0VjhYTTZYQXpsbnJzYzR0YzhKM2FUVzkKOU4zVXFnbXFNS3FoVnVnbDlCOW4wSzIzdzExVWJWK3NGQ0FWR243UHlmd2dxT3grdFB6ZWhXY3k2dWRpVGtKNwpZdW9uT253MDRqV3FScEEwWmpFR3BkVzFBbUFZdmhDKzZsOGJvUFBZZkxCQWlIZ3B3aFlPdDRDYjhQNkZ0dFR1CkhGMUcrUW5jSmxaZzdEZ3FvRG9UbXRCVVFralVhTG0yZHNKVExnbTVrSWpkV3lEem9RRlhhKytzSUZ3OGcyeEIKVEZvOEpybzNJaDBVWDU5cDdEclQyektFL1FOV1J4K3YwK3A2eDFueVJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzZqQ0NBZEtnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnR2Y0dWdQpjMmhwWm5RdGMybG5ibVZ5UURFME5qSTBPVGt6T0RFd0hoY05NVFl3TlRBMk1ERTBPVFF4V2hjTk1qRXdOVEExCk1ERTBPVFF5V2pBbU1TUXdJZ1lEVlFRRERCdHZjR1Z1YzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG0yZFQ2TlB2a0FYcmpOd29oTDZjSgoveFp3a1hoeEVVMUZmMFdxOUlJRHpzc05ZeEYxTGRKZ1lKbmtObUx6NEVjSjluUDBLL3dPQXpHWEMwbW5yVGN5Cm1wbVBwWHA2cVdnMmFxakpyRXFYQmkrS2ZISnVJTVJYUnZYMysyUHhyUm54RHNKUmFWNWY5ekMrdGFlejRiK1MKZTdtaFNWUnErT1pQaG5BVExPYnZiS2ZGREYveEdHdDVEKzJvSk5YNXE3ekUzYk5ZZ0Vja01uVlQ0eGlwR3ZBVwowMVZyVDhpc1FmSTl3SzNjZkZaS2UxRGhyV0N6SGxXRWc1R0tRazNKU3p0amNGbHJOU1dYeHZzZklwK0EwTDcvClZmTHdXU2ZRMjk4NFRzdDVSWXR1UnB5NlFkS3gwZWp5bWpxZFkxSkFYQ0RiZ0ZVTWJLVThiOWJndG4vTTVWL24KQWdNQkFBR2pJekFoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFDRks1KytqQ2RTaDd6bjhIOWpsZFRUTHk3TmtKSmRscm1TWnZzYW0yTnJuQ0NGCnFqNXEzZkdyOS9XaStqSC9zNkdsSDNYWk9ncnlGbzNMVUxnV2xRK1p6S05JTHNVbjMyWkxONU5scDlvVFFJT1AKYXBtYkhiV0RCc1BldzJPbEZJM2FXalVYbk80ZW1qYU9uOXdLQ2pmakRzVkUvRlI4MFkrQThhQ1NTeThFTE4yNQo3dU9xcW8yalgwdU9Wc1JkMVRwRnY3bWtydk5mUUphWTA3OFNWVm5mTVhkVHgvUkVUdkdUTGVGbUhqUDJEN2xVCm5QMjM4cHp1Y1JLVk5OUVVjL2ozSm93SWVpdTlnU3pjMmRpQXJNc0k0emMzNzZLdG5ldVdIVkxJMUlWUjI2MncKVDlCOTc1c2E4VTQzV3FvT2wvakdOSWRYWjdEcFQ0c1NhWUc1Wis2eAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "etcd.server.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3hLMUdrQm9SeGszcHphVDJ5R1h0emtMa2crT0traHk3SENXdlc2bWVCcTNMSzZ4ClZkd0xFdElTc0ZwWVFZQ3FZak92Q2k2VEZVeThlemZUNEgvdU5WMFQxd21UaVBBOXEyWjBZR2pLRzZWeEgxTEsKdXJIOW15ckZvTm5qaGNNLzJiR2lrY2RFMS92Vy9wajE2QUxWUnNpaCtLazl4Z0FaelZBZWZWcU9lOE5XdW5Hego3d2d3UFBuZko1R1BnY1JUNk5qWmdmekZsZjEyVDk0dDlxYkRrT2Rwcmp5WDB4dUdZWjZzYmZ4eWI5ZmNmUDBzCjNUOVJOMEV0dkRWVndzUnFkSnVhMlNMQVhkSjMvTWxHN2dJQ054YUkwSXZKZTVKK2hzbXNRMFd5R01Nb2xmRjcKUWxnNkd4U2dTOExicDFqSDZCOXlWYXJNS1g3VndCWk9KeU9zNHdJREFRQUJBb0lCQUZsWE5RaGIzU1pLMzFrKwp2c0xLaE5DT1dNVkJTSXdHK0ZOZlVUcGE5ZlRsejJTd2NWbHdXTVg2M2tKVWJqMDVyMDhnZXBkQU0yNjY0VXZSCmlzRXo5aVlNaGV5alh5V0ZXY2twT0QxN1lLeit2V3RxSUowV3JaNm1IVE1JOTVJb2xSS2ZyMlB5am80WXNpT1MKYkhVZzd3cm5Fbjl2QzNLbVV5cmIrY3JSY1pZdVYvQnI1NlhqSXNLSUVTang3Z3NqN1g2RHhxWEJTV001Y21nTApFdjJnNk05U3hadVlaemNaYjgvKzBnVUc3UkNUcWJIeEZhMFZLZXV1Yk9wSWN2UVNCQVV1c3NuWHgrRDlGQ2hVClZjQjJJcVJXSEt3dHZad2Y4c2ZrM0J4OFJqb1AxNGpsSC9samhORk9mQ0J1N2grZjZkZmFCb1lPTmU0SXEwNnQKckM3MUYvRUNnWUVBeTRsQVVJSTRuekV2VDljWDhJV3NkdmxZdEcwYWh1Y0Ixeng4ZTVnWTNkNkVMMkZ0YnRXRgpFb2FJYTU0TWxWczFXejNETHA3TFh2eUx4cTg0RE53T05yZldsZk9ZY3dSV3krVHFKU25Bbk95eWkvbmJKU0lPCndBZElGMFVTSEFST3NoQnBmZkI5K0R5YUw0dGRNVmZqWG9IZTVuc2hGN3R2QmpzWTlZRUVCK3NDZ1lFQTlWc0EKOWJFYTJ3NDlsZUd5NHFML3Nkd25nbWJ4UjhlWlpTOUxEVUgxQ1JsWWR2SjE4R3ZuMktHd2ZpTTNHeXI5NW1uawpESW1KSWVRZVdQOVFic0hmL0RoUXlRU1pKMVEwTnVaK0hQRGZPYWJmbFJKTi95QXRia1ptQ3FZR1V5NzgvKytJCmk0ZHZ2cG1DZUp1R2hlVWlqRDRmdllTS3BLUDZPSHZZdlo2RGFPa0NnWUJhaFZsSU5SSXZvclZUQWV1UXVqTEEKMnhhYmIrYWJWc1FYMEx2Z1QvM0hOejU4d0F6bWZTbm8ybEp6NGwvZ1VTZEN4QTQ1ZnNBZUo1MldxTGo1NXlpZgpKMVhWYlBoQk53M1BNcWo4RER5d3pnaCtmb243VXRGU2tDcDh4dWhOODVCNFd4by91NlNhc1lFMVlmcjVoZ2dHCk1TWk1SVGlya0YzSlhLRTJGc0lQTHdLQmdRQ3dmQzViakhKWjRZdHhGWEVjVHMwSC9lazVocHpGMmhBLzFWM3kKQW1Da2srT3JZOHBzRHVJdFZGamswcVhmMS9QY1dvemNhODRGWDlab2cvWXlSU2k5ZnpDMDk2Ykd3RzN5azZkaApYKzNoeFdRTUVhZWkvVjFRZGprT0xkQmM0MjYvRm1pc25OWkhUcHFuOEk4Nkh0RFQraGZRdGRjWWlJOEROQ3A2CmN0dnBpUUtCZ1FDUURPMFhibkRpTmFzbW54QXlmTU5uK3l6T3BnRnhTM2dJU3BxVWI2TzV0V01MS1pkTzRQNEEKbEJVK2xQditFQ0JFUWhueko1WHdOWUZ2cTFnRE1mOFpOOWo3UGFSQXRHWVBWc0h2SUsyc1BPU1FRcGM3NncxaApiTnZLNk5xYkFIM0VwSFBMOTVRSU9OaVZNMWFjYUtEeUxRbEo5UjRzKzRUQTBGVGNPdjAvYWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "k8s-apiserver.key": "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRREEzS0lnT0hYcDZTRnkKU3RTZ2tXd29OTC9pcDlOVXlxU012YnlCRkdzdmtlV0RhTCtCRGs1Q0NQK0hNdTluMkhoUlZkL20zV0xWUjhMaworOVZsOC9icElhUzNnb0ZaUExPUXJXWGt1VUlVZHVYTmJTVDlWY1dTWUxBaVVGN29PeTB3YnhwKzYwSGdtK0FQCmJ1VlRBNzlrYkJDaHdIb0ZlRHJtMDFzdFVES1NYb0FhQjBPSzdTdXBHVXNjNFFBUngrWllKOWVuaTZlNGg5L3kKODc4WDhhdTA4T04rWmM5WTBKdEhVK1l3OFVTRTBBaWJlZWdDTStNOGlhK05mRGpabC84eHJEanIzUkgvak44aQpOVzdNTnkxV1RqRGQ4SitXaWNJdXZzVmN1Z1lnQXV6S1V3ekFuZVlUa3l2ZTlRUWFjTEEvbkwxTUUyVytnL3RpClZjS3E4WTR0QWdNQkFBRUNnZ0VCQUpQclpPbWpoRVNRaXhlVzd6ZnI4WEZ3Njg5U2V0TG96WVlvckNDd1lYbE4KeENPaXZtYWthejlZbVd1L2xFRW9sVGVFenNMSi85aW5Qb0xUNkJ0WEg0UTFTcGw1SGU0c2tXaWdwYXJrc0JyMApDbE1ocUNJcG0rd2wvbEdESlJlbTg0VFhZaElBTERteU5BcUNPcDhPRzhoUTNmekJuSlQvWHVYVkszUTRzMkR3CmhONHRubHQrbmNVSDdCam5xK2EycnNvQlFwUzZVWWt4cmFYSU4xZWN1b0F2TzBXRXhXblBaa2c5L1Nac3QwN2UKdUM0N1NLOXBreXRIYjJmSitaYzJMOWRFTjh3VmRMbndCVlhYS0xRaWFxNElVcjVtSXRnZjNTNFRUellwZFdSVgpybnUzd3NxRWtSR0RHVzNpNE9lalhnc0lON3FaMVUrT0NWQTRtMzhDZlNFQ2dZRUErV24vUGlGN082OFhvemdGCkFNb3pkUEVKbnZJRHgwYmsvaE8zY1k3ekZXYVRoQ2pxaHhxbVQvTHJuTEMyZDJ6RVlLdUVMMERVWHNIUkcwU0EKWjYvWjBUaCtUanZWS3FKYXlxbFpVZ2VOT2UwOG5kV2tCd0Z4bHF3dFlLakt2ZGQ0VU9IR3BQKy84NGJwc0VhZQo2Mm9ncVRSZG9xcmEwMStJR1VYUTlveUJWSVVDZ1lFQXhmUlovdFlVUENPalpoNWhodEZlUVlQTk50bW43a2RyClV0RTVzeUJQL1BOMkJTM0VIaDJZckszbExRTjdkVTdReW5BSUJYUFhTQnphazZCLy9TUGxzaXBHa1F0SDd4dkcKK1A3OG1sMkk4dmNOTGlMaW84NVordkdFUUgvWENycjNOVWhDbGF1bkhQZjl3SUkwcER3SEZrdWkxTmRhQ0lSQwpBNzZMQUljajk0a0NnWUVBdTREQlgzOGlPdk5kek5uUGdSR0I3N2RKcVZGK0g3RWZkQmQwZ0kyY0Y0bWUrdXNiCnJXZ09nZW80MFBwVW9xR0ZYTHQweTJWc2dyUW90Tndod0ZHR2FmQ1RtOU1GWldEYTZxSzN3S0JtdnBhb1RHd1IKUFNjTHN0OUwyZS9yUXg4YWw0dTBuOVNaQk1aM0pvdGc2OUJFTDVCcm1GL2oxS1pzRmJ2VDVaWXBvRlVDZ1lBWQpQSXFvUU4zSlh6T3FWUjNydThhbWp0U1pXcHpNOThHVUtqbStUTDUrWWZDWlFiazVWclpTcmhmWkl3d0NtTnZICmJXQU9DdGpZNDI5L2s2OFg5MFV3UXl6UXBXanhSWjFlN3hsT2JSVlBhaUFhL2ZweHc5b1FkM0dSMUJVb0l5d1IKUWYrbEE1YzZYTUtjeDFSYXAxN1d3L3Z6dzBvcXNNYkVYcGYyUUpXT3dRS0JnUURFZ0E1TTlzaERZa2tDN3kyRwpzdWdGYWc1SDRwZWVRazJwWnpOS25vVnZKM3JITUE4U3FiQ2Fsa0pHY2pUck02elVsdHVxajAxNDBqdTVPN1dnCklvdkxVcSt0N2hJOUl6QjF4V0srMy9hTHBwSWdHUndEaHA5SmpjM1l4ajBGRk11aS9SYkIvMUQrTzJlTVNxOXIKS1NrRllJREt5Z21HcHcxeWQrNUFIZ05DU1E9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==",
        "kubeconfig": "",
        "master-config.yaml": "YWRtaXNzaW9uQ29uZmlnOgogIHBsdWdpbkNvbmZpZzogbnVsbAphcGlMZXZlbHM6Ci0gdjEKYXBpVmVyc2lvbjogdjEKYXNzZXRDb25maWc6CiAgZXh0ZW5zaW9uRGV2ZWxvcG1lbnQ6IGZhbHNlCiAgZXh0ZW5zaW9uU2NyaXB0czogbnVsbAogIGV4dGVuc2lvblN0eWxlc2hlZXRzOiBudWxsCiAgZXh0ZW5zaW9uczogbnVsbAogIGxvZ2dpbmdQdWJsaWNVUkw6ICIiCiAgbG9nb3V0VVJMOiAiIgogIG1hc3RlclB1YmxpY1VSTDogaHR0cHM6Ly8xNzIuMTcuNC41MDozMDQ0OAogIG1ldHJpY3NQdWJsaWNVUkw6ICIiCiAgcHVibGljVVJMOiBodHRwczovLzE3Mi4xNy40LjUwOjMwNDQ4L2NvbnNvbGUvCiAgc2VydmluZ0luZm86CiAgICBiaW5kQWRkcmVzczogMC4wLjAuMDo4NDQzCiAgICBiaW5kTmV0d29yazogdGNwNAogICAgY2VydEZpbGU6IG1hc3Rlci5zZXJ2ZXIuY3J0CiAgICBjbGllbnRDQTogIiIKICAgIGtleUZpbGU6IG1hc3Rlci5zZXJ2ZXIua2V5CiAgICBtYXhSZXF1ZXN0c0luRmxpZ2h0OiAwCiAgICBuYW1lZENlcnRpZmljYXRlczogbnVsbAogICAgcmVxdWVzdFRpbWVvdXRTZWNvbmRzOiAwCmNvbnRyb2xsZXJMZWFzZVRUTDogMApjb250cm9sbGVyczogJyonCmNvcnNBbGxvd2VkT3JpZ2luczoKLSAxMjcuMC4wLjEKLSAxNzIuMTcuNC41MDozMDQ0OAotIGxvY2FsaG9zdApkaXNhYmxlZEZlYXR1cmVzOiBudWxsCmRuc0NvbmZpZzoKICBhbGxvd1JlY3Vyc2l2ZVF1ZXJpZXM6IGZhbHNlCiAgYmluZEFkZHJlc3M6IDEwLjMuMC4xMDo1MwogIGJpbmROZXR3b3JrOiB0Y3A0CmV0Y2RDbGllbnRJbmZvOgogIGNhOiAiIgogIGNlcnRGaWxlOiAiIgogIGtleUZpbGU6ICIiCiAgdXJsczoKICAtIGh0dHA6Ly8xMC4zLjAuMTY6NDAwMQpldGNkQ29uZmlnOiBudWxsCmV0Y2RTdG9yYWdlQ29uZmlnOgogIGt1YmVybmV0ZXNTdG9yYWdlUHJlZml4OiBrdWJlcm5ldGVzLmlvCiAga3ViZXJuZXRlc1N0b3JhZ2VWZXJzaW9uOiB2MQogIG9wZW5TaGlmdFN0b3JhZ2VQcmVmaXg6IG9wZW5zaGlmdC5pbwogIG9wZW5TaGlmdFN0b3JhZ2VWZXJzaW9uOiB2MQppbWFnZUNvbmZpZzoKICBmb3JtYXQ6IG9wZW5zaGlmdC9vcmlnaW4tJHtjb21wb25lbnR9OiR7dmVyc2lvbn0KICBsYXRlc3Q6IGZhbHNlCmltYWdlUG9saWN5Q29uZmlnOgogIGRpc2FibGVTY2hlZHVsZWRJbXBvcnQ6IGZhbHNlCiAgbWF4SW1hZ2VzQnVsa0ltcG9ydGVkUGVyUmVwb3NpdG9yeTogNQogIG1heFNjaGVkdWxlZEltYWdlSW1wb3J0c1Blck1pbnV0ZTogNjAKICBzY2hlZHVsZWRJbWFnZUltcG9ydE1pbmltdW1JbnRlcnZhbFNlY29uZHM6IDkwMApraW5kOiBNYXN0ZXJDb25maWcKa3ViZWxldENsaWVudEluZm86CiAgY2E6ICIiCiAgY2VydEZpbGU6ICIiCiAga2V5RmlsZTogIiIKICBwb3J0OiAxMDI1MAprdWJlcm5ldGVzTWFzdGVyQ29uZmlnOiBudWxsCm1hc3RlckNsaWVudHM6CiAgZXh0ZXJuYWxLdWJlcm5ldGVzS3ViZUNvbmZpZzoga3ViZWNvbmZpZwogIG9wZW5zaGlmdExvb3BiYWNrS3ViZUNvbmZpZzogb3BlbnNoaWZ0LW1hc3Rlci5rdWJlY29uZmlnCm1hc3RlclB1YmxpY1VSTDogaHR0cHM6Ly8xNzIuMTcuNC41MDozMDQ0OApuZXR3b3JrQ29uZmlnOgogIGNsdXN0ZXJOZXR3b3JrQ0lEUjogMTcyLjE3LjAuMS8yMgogIGV4dGVybmFsSVBOZXR3b3JrQ0lEUnM6IG51bGwKICBob3N0U3VibmV0TGVuZ3RoOiA3CiAgbmV0d29ya1BsdWdpbk5hbWU6ICIiCiAgc2VydmljZU5ldHdvcmtDSURSOiAxMC4zLjAuMC8yNApvYXV0aENvbmZpZzoKICBhbHdheXNTaG93UHJvdmlkZXJTZWxlY3Rpb246IGZhbHNlCiAgYXNzZXRQdWJsaWNVUkw6IGh0dHBzOi8vMTcyLjE3LjQuNTA6MzA0NDgvY29uc29sZS8KICBncmFudENvbmZpZzoKICAgIG1ldGhvZDogYXV0bwogIGlkZW50aXR5UHJvdmlkZXJzOgogIC0gY2hhbGxlbmdlOiB0cnVlCiAgICBsb2dpbjogdHJ1ZQogICAgbWFwcGluZ01ldGhvZDogY2xhaW0KICAgIG5hbWU6IGFueXBhc3N3b3JkCiAgICBwcm92aWRlcjoKICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAga2luZDogQWxsb3dBbGxQYXNzd29yZElkZW50aXR5UHJvdmlkZXIKICBtYXN0ZXJDQTogY2EtYnVuZGxlLmNydAogIG1hc3RlclB1YmxpY1VSTDogaHR0cHM6Ly8xNzIuMTcuNC41MDozMDQ0OAogIG1hc3RlclVSTDogaHR0cHM6Ly8xMC4zLjAuMTc5Ojg0NDMKICBzZXNzaW9uQ29uZmlnOgogICAgc2Vzc2lvbk1heEFnZVNlY29uZHM6IDMwMAogICAgc2Vzc2lvbk5hbWU6IHNzbgogICAgc2Vzc2lvblNlY3JldHNGaWxlOiAiIgogIHRlbXBsYXRlczogbnVsbAogIHRva2VuQ29uZmlnOgogICAgYWNjZXNzVG9rZW5NYXhBZ2VTZWNvbmRzOiA4NjQwMAogICAgYXV0aG9yaXplVG9rZW5NYXhBZ2VTZWNvbmRzOiAzMDAKcGF1c2VDb250cm9sbGVyczogZmFsc2UKcG9saWN5Q29uZmlnOgogIGJvb3RzdHJhcFBvbGljeUZpbGU6IHBvbGljeS5qc29uCiAgb3BlbnNoaWZ0SW5mcmFzdHJ1Y3R1cmVOYW1lc3BhY2U6IG9wZW5zaGlmdC1pbmZyYQogIG9wZW5zaGlmdFNoYXJlZFJlc291cmNlc05hbWVzcGFjZTogb3BlbnNoaWZ0CiAgdXNlckFnZW50TWF0Y2hpbmdDb25maWc6CiAgICBkZWZhdWx0UmVqZWN0aW9uTWVzc2FnZTogIiIKICAgIGRlbmllZENsaWVudHM6IG51bGwKICAgIHJlcXVpcmVkQ2xpZW50czogbnVsbApwcm9qZWN0Q29uZmlnOgogIGRlZmF1bHROb2RlU2VsZWN0b3I6ICIiCiAgcHJvamVjdFJlcXVlc3RNZXNzYWdlOiAiIgogIHByb2plY3RSZXF1ZXN0VGVtcGxhdGU6ICIiCiAgc2VjdXJpdHlBbGxvY2F0b3I6CiAgICBtY3NBbGxvY2F0b3JSYW5nZTogczA6LzIKICAgIG1jc0xhYmVsc1BlclByb2plY3Q6IDUKICAgIHVpZEFsbG9jYXRvclJhbmdlOiAxMDAwMDAwMDAwLTE5OTk5OTk5OTkvMTAwMDAKcm91dGluZ0NvbmZpZzoKICBzdWJkb21haW46IHJvdXRlci5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsCnNlcnZpY2VBY2NvdW50Q29uZmlnOgogIGxpbWl0U2VjcmV0UmVmZXJlbmNlczogZmFsc2UKICBtYW5hZ2VkTmFtZXM6CiAgLSBidWlsZGVyCiAgLSBkZXBsb3llcgogIG1hc3RlckNBOiAiIgogIHByaXZhdGVLZXlGaWxlOiAiIgogIHB1YmxpY0tleUZpbGVzOiBbazhzLWFwaXNlcnZlci5rZXldCnNlcnZpbmdJbmZvOgogIGJpbmRBZGRyZXNzOiAwLjAuMC4wOjg0NDMKICBiaW5kTmV0d29yazogdGNwNAogIGNlcnRGaWxlOiBtYXN0ZXIuc2VydmVyLmNydAogIGNsaWVudENBOiBjYS5jcnQKICBrZXlGaWxlOiBtYXN0ZXIuc2VydmVyLmtleQogIG1heFJlcXVlc3RzSW5GbGlnaHQ6IDUwMAogIG5hbWVkQ2VydGlmaWNhdGVzOiBudWxsCiAgcmVxdWVzdFRpbWVvdXRTZWNvbmRzOiAzNjAwCnZvbHVtZUNvbmZpZzoKICBkeW5hbWljUHJvdmlzaW9uaW5nRW5hYmxlZDogdHJ1ZQo=",
        "master.etcd-client.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3akNDQWRhZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReVdoY05NVGd3TlRBMgpNREUwT1RReldqQVlNUll3RkFZRFZRUURFdzF6ZVhOMFpXMDZiV0Z6ZEdWeU1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRTVTNCL3g4R29ESDBSZjFBMDhVS1pWR0RveVBSWUVUUWx0bTlSWSsKVzBKUEZ1R3J0bjJOd2x3aGgrYzEybTZtM2lMY3JDa2hqWjUxRTBSTHlvbFhIb2UyRmRIaFI2Z0M3VUxzRWU3VQpNdDVucTBCb1lrTWVTV2JoQTVqZmluSXNaZmMyWjh4TFFyeDBiUHB3Z3N1dFVtSXozWDc3Wno3ZHAwN1REeDdrCjVVTS9Ob2ppZ0lYcmxNRitNejI4M2ttcVQ5YkFzR0hucWtyaGxKZUt2WUNucUNpODJrU3AvaFJPeEp3aWFUeE0KSjZnY0wyM2FlOTNpbDd3WE10OXlEMXI5aVVTM2ZIdWNrdkxHbEhiMnNEOG9aMUgrbkc3RGNLVUxZQUR3TmU5Sgp4aVk3bTVIb25oU2VIVWVzQ3JDWVdCUWtzRlRja0xocUEvcUJtTzJCRktsQVV3SURBUUFCb3pVd016QU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBdkI5Y1ZrTGJGNFRjTVNSeElPZTB5T3huMnRmY2JuRm4rdkJqcmdjMQpURFlGOGp6VzBaOWxTeFlYcmVGbUVFR0JsRXpJZmFxUGRNOWFDMENrNXpIeXZXUXFhT1k2THpvdVdJTUdtVXNaCjRaSXdMaGdtTGlKajVIZ3BWUHdXZ0VFR0Y2N3lLcm5ZbEtGY3U4ZnEvcDRvTGh3N2pLcDFKNlRicjc2ZGpWMXAKREgxd0dvanZ1SHB6ZDRUSDh6c0dlRlVVaEwxZ3g0aEVqeENnaTVmTGNnY0Fna2I2SDE1WEM3elRNejFhcmtWcgpNREsyRTNwU2lPd0ErU2UvQTlWNzBGaTBTQzd2d2RSUFhTUUd0a1hoSnNqcUpFdkdieTl6Sk5xNUw5NGgxdzdiCjdUTmliWUtZOXlLZHAxVXB4SnVNZnpkRE1oQ2R4ZzRIZnpQbGhwdCtVdGlLNFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "master.etcd-client.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFNVM0IveDhHb0RIMFJmMUEwOFVLWlZHRG95UFJZRVRRbHRtOVJZK1cwSlBGdUdyCnRuMk53bHdoaCtjMTJtNm0zaUxjckNraGpaNTFFMFJMeW9sWEhvZTJGZEhoUjZnQzdVTHNFZTdVTXQ1bnEwQm8KWWtNZVNXYmhBNWpmaW5Jc1pmYzJaOHhMUXJ4MGJQcHdnc3V0VW1JejNYNzdaejdkcDA3VER4N2s1VU0vTm9qaQpnSVhybE1GK016Mjgza21xVDliQXNHSG5xa3JobEplS3ZZQ25xQ2k4MmtTcC9oUk94SndpYVR4TUo2Z2NMMjNhCmU5M2lsN3dYTXQ5eUQxcjlpVVMzZkh1Y2t2TEdsSGIyc0Q4b1oxSCtuRzdEY0tVTFlBRHdOZTlKeGlZN201SG8KbmhTZUhVZXNDckNZV0JRa3NGVGNrTGhxQS9xQm1PMkJGS2xBVXdJREFRQUJBb0lCQUYzcjJjaXVSTHFKSXhGcQoxb0xNc2F1TjFqRWM5L3dWbktLL09YYkIvYnJiZXA1bWk5Mm00NlZ1bDRRYmdYU3NBcUVTZWxCWlV5aFdqR1ZjCjk5OGZycWdKdllNNnV3K29NVHhMZ3BNWnZiUlNWSFlhZ3dUUHdCaFcyencrTzBsUlFXdnM3YXlMNUVuSjVLUE0KaGlHSzhXYlJ2QXFRR0ZIRDZyRWcwWlg1Y3J6YmJKR2J0bUYxWFdXOWlMcGNxZkE5Y0t3TnR1a3NjcXJqRXZYVwo3MExBaTdoQWIwcTdSNVdpdWJ6QnVMVnJYY1dWVXpmTjQzL1FucTM5ZWcrUEU0dzFoanhkWHMxbm5OSU5pNkQ2CmpYOUY1dWE2OW5WaEMzcUMrak4zY0FkQzQ2aXVvdGZjTXM1ZzlsTjdZNDNaZUM2L0xpd1pwUzdmUnpQWFVsSHgKTFVrdFhhRUNnWUVBd2NtVkJXT2sxYlM4d1ZDQlBWVnlPTHFXaDl6bk15ZkxIZW55RWw5Z052aUsrY0VJY1BPOAo2dnZINjBJQ3M2b3YrUlFTQWtvS2hkNkQrUkN4SDhpakVUWWQ1bzZEdmpVTng3b0tVVE9pSG5CaXRaT3M0bXFrCmQxdDZUZFJjQ214VjhVbjNSZ0htZms5WFljUjZDRllsSEltakVSR0dDODNQRE9zcUpzak5TeVVDZ1lFQTcweWwKTmVIL0k1ZnBvS1pON2VJcTRiU2FrMXh6RFVzb1RDeEdRNlh3MW5vdllUSHRSK1BtdjV4aUpGcnZ6TnUxbTNXRAo5YjZlQVBqR0JsbFI4cmpzWm9vbTBvazFIZmhTQ3ZMWkJsUCsxNHNZcHZhdUN5QTdUb0hSQXlBaEdsRlVDN1Z6CkkwVEtFY25FWENwVWlDdTB4Zkw3ekRkWnZVUGtlSDhXVWp1QmdCY0NnWUJ2NHdLdWxPU2tHdkZzc0IyZW13b1MKNVBCcXkwbVdDS0RHeWI5aGlqM1VIMWFtY3lSN2lzOEY0WStCTHFDK3VVRnZqMzRDWWx1SEJYMnZQVXIzTGZHdwp5MDBpUkNDZW5xVXhMeUlyMWlNQmJpUWY4SDYrVDVKYjg2NCs1NkNveC9vckVXaTZ1L2duNzRsbFFucXUrNFg3CjN5QU9oODZjWEJ6eXVZaWgwZ2h1SFFLQmdRQ3JYTFNXWUc5SHV0cUh1Mi9rNE9nYVZ5MjJSeWJ3cHhpRmE5TXAKVUdTbUFqdDVtN295bUFZK3dxc1pJN0hEZnJhUFM5a2ltczBsSHdFWHZORE5ReFd1M0ZHdXhLaXYvSW9yNHZuOAo2UnQrbU5JZmhsamVDTWZQa1hEdWp3eUZmeVh6ZUkycC9QSERTVHgvVDZUWEdvMUtqNVUzQ1pBTzA5YUJYMmpKCm5HbEJJd0tCZ0NtSGlMdTBQdVNpTHh4clFMSlpObGxZNks3ZVpXcnNBODJCTEJvZ3BnOGpMQmY3U2RMdFdBMWYKQmJRUmYwTkt5bVBTbkttdHRyaE9VWnJmL1dTUDVpNVJ6OWtlZ29vMnB5YWNxaTBSNHorcWtjL0ZtRWNLUjZaZwpSWkRTb3kydGpoZmNEa2xsZ2hTTW1MamRhMTA0b2t5bmI2YjJ5QkNGdnV3TzlxeE8ra01pCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "master.kubelet-client.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHVENDQWdHZ0F3SUJBZ0lCQ0RBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RRMFdoY05NVGd3TlRBMgpNREUwT1RRMVdqQkRNUnN3R1FZRFZRUUtFeEp6ZVhOMFpXMDZibTlrWlMxaFpHMXBibk14SkRBaUJnTlZCQU1UCkczTjVjM1JsYlRwdmNHVnVjMmhwWm5RdGJtOWtaUzFoWkcxcGJqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNai80QzNJS3NaOHVlU24wN092allIeTdkaW0rQ3ZOZlg3RHc3Ym0zb2RlZk5tUAptbUNNdE1wZGFlVDQyalFEQWRaNEp4SDduQ3pZUEc2YzFOZ1QxRDA0YzluYlRkNzRzQjExVG04eGRWcEZwekhtClRGd09HN3V1ZVZMNm1mTHlveXhOOExLdUVzNXVwR3h0MEFaazNiU2ZtL3hFT0t5TGpCZmpCSEVINUhoRUtKRVIKRTlNWEV6MjJXeFNDL3JsSG9NNFM3Ry8yQU80OG5ORGhKSXhCZDNKcGI0TkZqdkN4QU5HYmc4MGdiWXduNDBMSgpIbHNuNnA3eXdGN2RKZFQ2eTExcGRVd2xCZkJZcXUyWk9nUnlIdENHZDJQUU9FVkxNYmlRak11cHhjZW9yQkV3CmtRMUpIZDN0dXRKRnZEU3JqeDgvSVhZSmZyK29DVXBXSUxucXp0RUNBd0VBQWFNMU1ETXdEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdEUVlKS29aSQpodmNOQVFFTEJRQURnZ0VCQUhsTXdmS3NOSFcrL2kxU3paZVRvNHVkOGdSTi8rK1NXa2Y5T25ST05WRHJkY2dUCnNoaVg1S0ExaVJWMmVUaEtqSzFWUUs1TjJxTEE2bCtESHFHSzNHMW9YUHR6eXYxV0d0d29pSDYvUUJ4V0dQS1IKTnp4RDd6RktpQm41clZjOWRmYjlyQ2NySXcxTFVxZFI5a3JuVFppMTFIUnVBUFFmTTdEOENYTC9CTGlnWVpmWAoySzFyRXR2bkNwZkk3QWdHcFFwL1NBbVhIRmVHTy9uemNMTVYvS01SWUYvN3R0bHJlNzV3d0FGZkQ4bGlKLzF1ClVQS2ZWaDQ5a1BMbHYrdXlpczVZa3EwRXIyQy9KTk1IRld1UzNnb3o3MjhHenBLTzgrQS9YNks5bFZ0ZFZCMmcKNmJyYWRUbldXbnoxM3Z5MjBRbXVqNVp5eGs4WXZLSkdSYnZSdUJNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "master.kubelet-client.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeVAvZ0xjZ3F4bnk1NUtmVHM2K05nZkx0MktiNEs4MTlmc1BEdHViZWgxNTgyWSthCllJeTB5bDFwNVBqYU5BTUIxbmduRWZ1Y0xOZzhicHpVMkJQVVBUaHoyZHROM3Zpd0hYVk9iekYxV2tXbk1lWk0KWEE0YnU2NTVVdnFaOHZLakxFM3dzcTRTem02a2JHM1FCbVRkdEorYi9FUTRySXVNRitNRWNRZmtlRVFva1JFVAoweGNUUGJaYkZJTCt1VWVnemhMc2IvWUE3anljME9Fa2pFRjNjbWx2ZzBXTzhMRUEwWnVEelNCdGpDZmpRc2tlCld5ZnFudkxBWHQwbDFQckxYV2wxVENVRjhGaXE3Wms2QkhJZTBJWjNZOUE0UlVzeHVKQ015Nm5GeDZpc0VUQ1IKRFVrZDNlMjYwa1c4Tkt1UEh6OGhkZ2wrdjZnSlNsWWd1ZXJPMFFJREFRQUJBb0lCQURWMFB4Vk4xM3BqN3pnTgpIZkw2YkFLMExXYmh1THhGY091R2VvVW96dU5uVUlLM2V4SFVPYnhiclc3VWM0dERoWGlaQ2FMeHJDNE03NzFtCi9mL2MvaU90NExsK1ppNDNLdmNhbkZwYjU5NnpDV3p1MXozZ0RxWVNGM2ZtNTR4QjFQMVNXUUhiNDJwODZFTmgKek9IMmJ6TzdBc3ZMQk50MlhUSjVFRlJUQ2dLbGZLeVF6T0s1TytpblJjVDBoNjIvVjNRaStKV00zUDJiMU1TSgoydmFUMmQySGRwRTlHYWJuMCtKVEFrVFdFTml0RTM4UzJqeEdzNDRiOHB3S1NhRGF4SFdlNEtWVVVhTDZDdzYwCno2OXg1eTBRaE85UnpNZ3pvMW42WHdPUzlDbFlPOStSRW8wclVtcEZTZzNPLzN5V2c1bHNMZEUyV1h1RTBydGUKdm1SM2xUVUNnWUVBOWVRc2pRbnF3S3Vxd2RlZlE1TXNIazdoQStZZ2Rybjg1TU9GamZNYStyejBVVFNBd0oyRgptZ0ZXT2dNOHN2d1c3ZFhoZUhjL0RvZGRhNnFJRnQ4UHprK2laeDkvTWJaOTVLY2l2VVZqbjIzNlBnd1ZJbWVLCnpvRjByUGxDRk4weFdDajhQbnUreW9KMy9iOFRJREF2ZFUxUFZXeWZ1TmJlcG9hN0FwMmxWbmNDZ1lFQTBVTS8KbWVieHZLS25xelo3SytCZUphR2FZNjBqVGtUN09QYjZnYi9YZVJjR3NQenlKbUZkcnFwelFPUFBLNFMrS0xNWQpNQmJkSUZuT0M4Y2lkbXdGQnFkNE5KUzJ3OVJrdWFsclByNXFtUk0wN3FmZmtiOEVpRks5eS9iY2pkSk1YSmMyCjh6SFpTNWZjcXgvbTlnaGN5RzhTN1hZV3BIN2xMQkFCdTR5OUx2Y0NnWUVBb2lMNHRXOUttZzBZSllWV2dTcDAKTnUvd002LzB6QlRMaXRUYUpjV2RqcVExdmE0UEQvTk9lMFJTWlNKcFRlUW9BbCs3c3NGK2xNZnhjK01ZcFd3awpjZmZVc0liMlNnTjVjK0k1Wi9CdlJsc3dYT1Yrc2hid1VrYk9kcGhOV0pDWnp2WUhqZlB1MUgyL1BWUlcraXlMCnZwOWhwb1JmdFhRSmtHamF1MWpVQXZVQ2dZQjBBQXc4bXdtNzRJcURYVk1QOG5NZDl5UW5SdTNBVUhyV2pBbzMKYkluY1JRaGZpZ2dOZ0lHMjlpT25mK0R5cGNYbnQ4ZWJ1TURoVXdibC9vQTdGd3YrTVUxd0VGUHo0RVBwcTJHWQp5V003OGFxdzlQdjR4ZU9VVWhHR0JCVWt4TU94dTkwcEdLUDB4SHo5bTFTalkrVlM4a2VTdkpnMm5XVWFkTkVSCkR5WTc1d0tCZ0RaOEo2ZUxKRExnNFgzZ0N4RG95RVpVRlY0Y2xBK0JZMHpFVnJLNjdYb0FQeHRWQWpMZ2o0WlEKU0E4eE1ldURxQi9YSTY1ZXpqak10Y1ZkZisvaGlmTVNOZm1pMGVMVmtnbGp4YmNHR1kxY1Z4RXVNWnBxOFpPdApSQlJ4S015aFhIWU9oanh1YWprSG5ONVJjUXpqdjZMWWYzTzQ5dGs1alIxREdhRHZ3MEFRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "master.proxy-client.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM5RENDQWR5Z0F3SUJBZ0lCQlRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReldoY05NVGd3TlRBMgpNREUwT1RRMFdqQWVNUnd3R2dZRFZRUURFeE56ZVhOMFpXMDZiV0Z6ZEdWeUxYQnliM2g1TUlJQklqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMCt4dk5ETTA2MkFHY3NWekxWRUtyQ3dKRGlEbThNaW4KMElLRTZkdDdPQUNxT2cycy9lYjd4dG01SUQzY0Y5NW91TEhtTWY1eU52RjhONEp1bUUrUFVORGdxMTM3NG9VMwpYdk0xRTVoaHVyK09kZ1Bld2ZzR2NtUFQvdzRteUgwbEQ3S1VocEVTMjkyZlZGd1V6U2dHUjhoejYzU1pXMEQzCkM2WXRvQmNzTGNjYmVFa0FzeERIVzFRc3NEbnlQWnpnNWdLZ1ZvVm9iZW9aaW4yR0RUVkRnajVjcEVLUEFBRkkKbDBsOUpoTHIwYzlMbGNLNHNJMTNvandYZUxhMmlZQXVkMm5KbmJCbC92MnJNeTdsSTROd3NUcWozTlVZZkd5MAo2TkM3RUdUamlFRGdsN3NsUDg4c0JheXFzdkh1aUdmOEZwUU9lUEYrV2dFVzNYcVVob3ltYVFJREFRQUJvelV3Ck16QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsQkF3d0NnWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC8KQkFJd0FEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGaUQ0RjNSUldhUVVkNUhHNy9YVkZCT2t2bnNhNzZUeQoyTEFHYWlmelBaK3U2aU9xYk52ckhZRmJlQ2FhK01PQm9EeTVLTmVVZUh6a3l0NHlYNDB3SUVOeGhyanZVd1YrCmp3RCtvRStvc3QvV1Vhc2JBWktXeWpnaEt1NmJ4cDJjZFZUN0ZzTngvTE1HdVQ4TUtnVnR2elhVREpEZnFpbTAKWUJucXQ5VGxKQmRDS05BU1ZsSE1nU1ppeE1pS2x6ak90MXVraHk0SDJURzFTRHZ4MVFYanA2QU9nYitDR2NKNAp0YlBtcmMrM2F5SzQzLzZKbVJOTmlHV1JNWGpTTVpqR0tnNEFFTHFsQTJHRC9ZbXlkaklicXpqTVdDZ0dhUnErCmNUZlFFaG9QeUN1bGQzWVZWZ0ZKTDdoVS9HaFBDeVhVa1VlZHdtcXhTR3NMYzAxOFhXN255UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "master.proxy-client.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMCt4dk5ETTA2MkFHY3NWekxWRUtyQ3dKRGlEbThNaW4wSUtFNmR0N09BQ3FPZzJzCi9lYjd4dG01SUQzY0Y5NW91TEhtTWY1eU52RjhONEp1bUUrUFVORGdxMTM3NG9VM1h2TTFFNWhodXIrT2RnUGUKd2ZzR2NtUFQvdzRteUgwbEQ3S1VocEVTMjkyZlZGd1V6U2dHUjhoejYzU1pXMEQzQzZZdG9CY3NMY2NiZUVrQQpzeERIVzFRc3NEbnlQWnpnNWdLZ1ZvVm9iZW9aaW4yR0RUVkRnajVjcEVLUEFBRklsMGw5SmhMcjBjOUxsY0s0CnNJMTNvandYZUxhMmlZQXVkMm5KbmJCbC92MnJNeTdsSTROd3NUcWozTlVZZkd5MDZOQzdFR1RqaUVEZ2w3c2wKUDg4c0JheXFzdkh1aUdmOEZwUU9lUEYrV2dFVzNYcVVob3ltYVFJREFRQUJBb0lCQUQ4dXAzemxvMnBsWjZiQwpMWE9lVE5OR0ViRVBxQ3F6ZUN6WExPOVlDMldIOVRoM3FWTE5rZFVZUm5SUlhSUVVzQjRZayt2bDA0R0QvNmZCCkVGNENvbFRTNFpqVjNXb01rNVNRYUF1ZWk4eVVuZEdibDhjM294VnBvK1BRQVVvVzNYelBuaTU4aENYZTdrakYKWjBJL0k1ZzFNREpMd2drTjFsbTN3clNQRkJIVlZwdFVLYmV4T0JQZEtrU0pvcUJMMm9aYmhPZGRGSlZYWmpCagpTS3YyMDlLMWJZTW9OMGxsTmJ5ZlN5N0xCT0U2VGxMYldWUWtsSlVqUHFOeDVGN1FtOUM0em4veWtCanArcThoCnpyejZPcStJVUplT2VDVHAraUpVaTBkWXhYMXdhbmdYZFVMeEhSVzZTdXB3RWduQ05pNnNOODBCTWYxb3pGa1MKdmVJU0tiMENnWUVBMkVWVlFZTGRmVkg2ZGo1NjBRQiswNit2cWpJeG5mZUdoUENZYkQwcWY1VDV5d3lpaWRjVwpuTk9kVUNUK1F2bUMxaEdtRGgvVTJKRTg0V1Q2ZDU3c25NNUw3NlZRNjlNNjl5UzFYZ1N2dWRHWUlCVU9xTFgyCk5Od2RhbUVUN1JaZUh4K28yRFpSVGFidjdNRzJkVVBMdTl4WWFNamM5RDdEeEYvUlV5ZWZKRjhDZ1lFQSt0cXAKS0JKYTFZVHptQTB6LzE3M2QvT1JuS0ZzNkhrKzFlUW1uNGRIdEozZHpveFpDbkh0ZVJuaUllU0FxZVBNdnlKUwpxNWdMNEFSRzhwZStnSEY1bEZlWjFURHlVdWs5bmxUN3RnUHFlaGkxQnJrMGRVS001QkQyZXkwUmtIRnFVc2JVCkhUeFpSajZyOW9VeGdvdmxJMW9vUnJpNlJFcUFVT0dKV2tFRDZqY0NnWUFvL3VPTldvZ3Z4RVZzK3FUL1QwKzcKUXRkU3ROY1E4YVhQTjJnOVJFNzFCa0ZmaXhLWWZHd3Q2RE11eVFSbG43UjhiYllEZ1djd2NqK1BIandZUnNqbApaSG1pZ0x6Wkp4NUxVT3NNV21rUkdUajBBK25XY3orcmYzb1grelR5d1VXd01xa242d3Y0WTBlaG9vcTZxZEpKCjF4ZnZMUHd0VkdSNXFnd2M3aXJOa3dLQmdEbGNpdFc0N01CcWVIRktnNXRma2VNQjlVZ0Z1YXVuSGZFM0RJWHEKSDBGejMrWjlQVmNnR2hkWkRkYUdNODJsWTRwSlJQSXNBSHNuUHpuMTdQL2Q4dGt5OXVCREl3WkdnMnFUTUVPOAp2WDlSNndNd2tvaEZ3WVhkUXgrRGZNSzB6SVZGSmZmUmR2Q1RJQ3RzNVpkZWVmVU5ocXcxVFpLVUhxZGdDMUp5CkQzMGRBb0dBT0dPZFAveG1KalRIRlBvVFdmZHJ5d0QyV3VqVDJPdkM0YXJmbFEvQUppUlROdVZMUW5aTEFJMy8KUnAvL1FuWXRWcmZjVVdaRHdxcFAyS0FDVkd0K1RCQ1RCRmVDeVdXRXZyMENyL1Y4cTRJY2JLZU02NDlRNHJ4SwpmYm1TUHBPVnBHSmd4cUw4bmkyY2Vwbklxd3NSL1ZSNVN0ZHd0Ukp4ZlhSbVhxNzlhcjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "master.server.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVPekNDQXlPZ0F3SUJBZ0lCRHpBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05URXdNak0wTURRMFdoY05NVGd3TlRFdwpNak0wTURRMVdqQVVNUkl3RUFZRFZRUURFd2t4TUM0d0xqSXVNVFV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUURvMjNUVWdOU0ZWb2s2S0crdmV0ZUJWdUtyTTNzNHpMcnZ3aXFTc3RQYzRnWnAKQXNIV3hkRkhQYmh3dHBCczB3R2IxVFVoUTJwNGpoS2ZRd0hidzh5VHVuYTdZTVpkbHZqQURxZEIzWHBWYjc0UQprMUYybGg5c2ZNS3NpS3ZxRSs0ZVN6YW9GM200U05VdEd1eFBkbDM1cG5vcnZiOU1jYjFtVEk2VVVwaVdTNlhaCkRQZ0RLYVc2VGJHU1dOMFlmT1RXZlFteDdOYysxYWFyWjV2NjF0Rk5TMGxSUkhmSkN6R25iWmpjS0Y4NWZyd3gKdUFxTDZ1S1ZXY2tRd3BUMXF5Q2RuWFExVEg4a1h3QWFVRzJhMTQvemEvaVVuRmNUbXloVGxTSnZiK1lBeHRWUQpkTEprcUtTS3A3YjJmK0tkSHVPRFZFSG5HbE1jKyswbDNjeFh0S1V2QWdNQkFBR2pnZ0dFTUlJQmdEQU9CZ05WCkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQ0MKQVVrR0ExVWRFUVNDQVVBd2dnRThnZ3ByZFdKbGNtNWxkR1Z6Z2hKcmRXSmxjbTVsZEdWekxtUmxabUYxYkhTQwpGbXQxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1PQ0pHdDFZbVZ5Ym1WMFpYTXVaR1ZtWVhWc2RDNXpkbU11ClkyeDFjM1JsY2k1c2IyTmhiSUlKYkc5allXeG9iM04wZ2dsdmNHVnVjMmhwWm5TQ0VXOXdaVzV6YUdsbWRDNWsKWldaaGRXeDBnaFZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1PQ0kyOXdaVzV6YUdsbWRDNWtaV1poZFd4MApMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNnZ2t4TUM0d0xqSXVNVFdDQ0RFd0xqRXVNQzR4Z2dneE1DNHpMakF1Ck1ZSUtNVEF1TXk0d0xqRTNPWUlKTVRJM0xqQXVNQzR4Z2dveE56SXVNVGN1TUM0eGdnc3hOekl1TVRjdU5DNDEKTUljRUNnQUNENGNFQ2dFQUFZY0VDZ01BQVljRUNnTUFzNGNFZndBQUFZY0VyQkVBQVljRXJCRUVNakFOQmdrcQpoa2lHOXcwQkFRc0ZBQU9DQVFFQU9oRUlIMytQMzJ5a2w4YkxWRVBVRDNsaExCSVc0eDdvNlNiV0VUbTV2dGt5ClBHU2FNeEFpV1RSTjlPU2Zqd1hrWG00T3JZVkhRMTV2QkY3dXJ3d3ZWbmtRL2tIZVJLYlljUGhMZi81ZUlOREcKNUpTVFFib2dJdkhkNUdrb2NwTE4yaGpRZHRyTkxxaWpNSVpFN0dtdEFqcEd1YnZJb1psb3Iza3FGazlaT29MYgpYSW1hR1NaWThuZVJ5WGNtQnU5aTNBQTB6cnRoVDhNTGtOYm1Kd1ZCWWtkVW05YWhHcDlmRWhTNmpYdk5nWFlaCkIwLy9BSmgvOVVXVm5uZ21NY2Qwd3NVc003ckZ4YlZTTVhwL0tsa3FNbGxYWWFxUndtazhqMi93em1yMGRSNEIKR0NxRHNFdFNmaXdPdE1iTEQ5SDRMTGtYY1h3NUdodkZhRS8rQnZ1TFdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzZqQ0NBZEtnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnR2Y0dWdQpjMmhwWm5RdGMybG5ibVZ5UURFME5qSTBPVGt6T0RFd0hoY05NVFl3TlRBMk1ERTBPVFF4V2hjTk1qRXdOVEExCk1ERTBPVFF5V2pBbU1TUXdJZ1lEVlFRRERCdHZjR1Z1YzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRG0yZFQ2TlB2a0FYcmpOd29oTDZjSgoveFp3a1hoeEVVMUZmMFdxOUlJRHpzc05ZeEYxTGRKZ1lKbmtObUx6NEVjSjluUDBLL3dPQXpHWEMwbW5yVGN5Cm1wbVBwWHA2cVdnMmFxakpyRXFYQmkrS2ZISnVJTVJYUnZYMysyUHhyUm54RHNKUmFWNWY5ekMrdGFlejRiK1MKZTdtaFNWUnErT1pQaG5BVExPYnZiS2ZGREYveEdHdDVEKzJvSk5YNXE3ekUzYk5ZZ0Vja01uVlQ0eGlwR3ZBVwowMVZyVDhpc1FmSTl3SzNjZkZaS2UxRGhyV0N6SGxXRWc1R0tRazNKU3p0amNGbHJOU1dYeHZzZklwK0EwTDcvClZmTHdXU2ZRMjk4NFRzdDVSWXR1UnB5NlFkS3gwZWp5bWpxZFkxSkFYQ0RiZ0ZVTWJLVThiOWJndG4vTTVWL24KQWdNQkFBR2pJekFoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxRwpTSWIzRFFFQkN3VUFBNElCQVFDRks1KytqQ2RTaDd6bjhIOWpsZFRUTHk3TmtKSmRscm1TWnZzYW0yTnJuQ0NGCnFqNXEzZkdyOS9XaStqSC9zNkdsSDNYWk9ncnlGbzNMVUxnV2xRK1p6S05JTHNVbjMyWkxONU5scDlvVFFJT1AKYXBtYkhiV0RCc1BldzJPbEZJM2FXalVYbk80ZW1qYU9uOXdLQ2pmakRzVkUvRlI4MFkrQThhQ1NTeThFTE4yNQo3dU9xcW8yalgwdU9Wc1JkMVRwRnY3bWtydk5mUUphWTA3OFNWVm5mTVhkVHgvUkVUdkdUTGVGbUhqUDJEN2xVCm5QMjM4cHp1Y1JLVk5OUVVjL2ozSm93SWVpdTlnU3pjMmRpQXJNc0k0emMzNzZLdG5ldVdIVkxJMUlWUjI2MncKVDlCOTc1c2E4VTQzV3FvT2wvakdOSWRYWjdEcFQ0c1NhWUc1Wis2eAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "master.server.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNk50MDFJRFVoVmFKT2lodnIzclhnVmJpcXpON09NeTY3OElxa3JMVDNPSUdhUUxCCjFzWFJSejI0Y0xhUWJOTUJtOVUxSVVOcWVJNFNuME1CMjhQTWs3cDJ1MkRHWFpiNHdBNm5RZDE2VlcrK0VKTlIKZHBZZmJIekNySWlyNmhQdUhrczJxQmQ1dUVqVkxScnNUM1pkK2FaNks3Mi9USEc5Wmt5T2xGS1lsa3VsMlF6NApBeW1sdWsyeGtsamRHSHprMW4wSnNlelhQdFdtcTJlYit0YlJUVXRKVVVSM3lRc3hwMjJZM0NoZk9YNjhNYmdLCmkrcmlsVm5KRU1LVTlhc2duWjEwTlV4L0pGOEFHbEJ0bXRlUDgydjRsSnhYRTVzb1U1VWliMi9tQU1iVlVIU3kKWktpa2lxZTI5bi9pblI3amcxUkI1eHBUSFB2dEpkM01WN1NsTHdJREFRQUJBb0lCQURhRHdrdEp5ZmRaZGhFTwpqRzhwdERCTWxnNThvL2w5UExxSzI0cXlvUlVTT1d2MlFFazIwTEw4Q1NVaUtKZkJvcHZJQTROQkZEa2JFZE1GClRmY1VWTjIxQnIwQmdBOURIQU5pcXRlcHNVMDFOdXNNZ2tMZ0RJVktoQXoraGpqcjU1QmlEVzYyNkVFemsrelcKWThLS3RKK1EwUU5TamVtb3F5MjYrSnBTNS9RdldWYzAydGEvUDNQKy9qL21OeTlCcVo2dUlYejRrOXByajk0UAppTTlpcEg2NUh2K3Q5V29hQzUzb0UyMjhOQ0dzMi9nU3NUNnB5K0wrMjB4MHVaQzlmUHJJN0hnQXRiZkJkbkR1ClZBd040eENOeGRReFJseVpPeXNVNThwUFgxYnlDS29YUFlvS2NXVmFKaTNCck1jc1JJdko0Z3Q1ODkxTjUrNTMKSysxOGw2RUNnWUVBODB5U25NbFZlL0d6Z1JYa2lCZmJ3SjZZUmJPbFVSaDg1MUFJK1QvSWZVRVVHSWJRTXRuZwpiRExZUzQrTDJocndpNjAvYytSRUtDRWZHNk1ZWUxzM2xWaDAwQjlvRlN6UUVxd0NRbmRpd1VhSzRlU2FCZHp3CjU1UHpmZ0xTZERWMXRQRFpHMFI2TWI0RldGb2VuZUkyRTNva1doeDRQSlREVTBJVXhDOExvLzhDZ1lFQTlRTlcKN3R6VENyN0VicHRRYkpxaXd4SmZkeHRDcDZkUTJjSlRzVCtDL2lXRVE0eGFVb1BTN2NSNkRLNVBHbXVCNWdUOApUL1E4UUZiSXcxMDJna3BSYVRIT1BKYS9vTHlPZ2M0aHhRMXUyVWVhYTdMcEdNVVVWMFN0YkpOV3A4UHJUYmk1CmcxRFY2T3ExWFhZT2dGVDZxNkREc0QyZ2pCdWpXVU1XeTNLRVB0RUNnWUJKT3cwT0lCT1k0T0ZVdzFBc0huSkkKZ2ZQM1Z1RTFqWmRhMEY1REY0MnpGYm1Fd0Y4K1R4SWJ2eG9YZERkMkNKSEttUFQyWHdpY3c0dG5lQ25JUTlHeApKQlRVNS84ZUVJVDRlY21jVSs3bm1lSUhxQlVzR3Bwd09ib2FmYUwyMDNpQVk5WVZQUUZDbzUxY1FKUGlsY29OCkJzQ1dWdWRoNUt6K0RHL1B0UkZkNVFLQmdCK1ZUcDk3MTdpSzNzZGpQZnJCOURreEpSMDFabUkyTHpYaTF1Y0MKU09CNTlaSy9oT1VlR1JLTlFTNWhTZEVlQ3FDY0ErcEtrWG01dGlkNDNJM3ZCbytJM0F6elljQldqZ2d0aWl6YwpqbTF6elhRVW0vZVZjQW5QMElzdWN2MHRSQ2ZBcUNsRlFrM0Q4NTBZbXNYd0xsL3hXVWhlcVZObVBLaEUvYXM4CkY5QUJBb0dCQUpzemlUNmpROFNCa1pTVW9Md05waHY2emwyZU8vVm4ydnZqTXQ5QXZ0Q2cxejlUd0txaVZ1OXkKS0hvcnZhcUthNkF5VWZlMlNyVGF6bnJ3YUR5aUFacXdVelVPRnZVK2padG1FeUdxODExa1lOdzUxeWdObUtYZgpKaHZIQmtkTTg5TWh0RmhNKzNyK2I4ZHpmS2FGZWtHQ0JhOTUzdzNkc1hKZ2tBRHNNUFZMCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "openshift-master.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lCQkRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RReldoY05NVGd3TlRBMgpNREUwT1RRMFdqQTdNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RWdNQjRHQTFVRUF4TVhjM2x6CmRHVnRPbTl3Wlc1emFHbG1kQzF0WVhOMFpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRHNvVnRic2I3aGJaNzcrTkJ4NmdTS0ZHb0tweFRwaDFRSUxGS29mQzNPT2JRMER4THgxb3FPVUF3QwpPVDV2NEcxMlowZ2dwZHFIcGZFL1VhaE5FREd0TTBGQTdZSzZ3MHJ4d0VKWXEzVTNVSVR2S1FzNndQUE1XQ0xHCldJT2FkeFdQYjExM2JyVTFocFFzT2lvQUQyZVdZeDFSQ1diS3Iwa29NSDRGZWN3UDZqOGxyczBYeFVKU2JibWgKN0lGaDZBK0sxS29KUW0vaHBuWERHMGRiRzY2RlpWZnlPSVFOQk95QW9aL3Q4SFJSdHhjNEtMbFBWMEJ4aG9tdAo2aUlTMjdYSzhCSWVNSjlCSUlnTmZPb2VWQk16UG5hOFVwVjRhRlZZN3YwT0ViNHVkWXlma0JEZkF4cHlkMnhKCmJXeVNPVURObGNHTjZqR3U3c2Q5aU5vYjdybEZBZ01CQUFHak5UQXpNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFBRVRXUHJKYkZ1cXREQldnS0hQSm5qanJzUTdTYUNjYVdVUkdwaTlDdlZkNlVLVUxmQXduc2dNYWlUCnBtSXVHNHhtNTZEcWFoMkpaSlZBNUNSR1BodmhSdExjaHNTdlJyYzBTdm1XdUREOHlIZ2JTY3M1OXdiMUdWeHkKdHhXc2h1dkxUV21tZEtCWmFWdnMrWTdNb2JIcVVXWm1DZkxlbm9Hc01hRDlVWkhZN1ptVXZNMDhIUmEvR00vUgphSFVtN0xuTFFjTC9jYk4yTFBBUEJWNEJSYk1MNFh5d3JYMTVqL3p4aHNhY0pWNWZaZWFyeGZ1TGJEL1FFZkVSCjhNbmRRY2dpYm5LTGFoS3BGbm5RWkRVbjFiT0RESm9lTkt3eDVnM3NhQlZ0Z090UWQyQ3JJOTMrSzl3Z1ZwWVEKZ3RUMk1zTWRwUnF0cmZmYlN1Y0Fzd3dWcVZJbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "openshift-master.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN0tGYlc3Rys0VzJlKy9qUWNlb0VpaFJxQ3FjVTZZZFVDQ3hTcUh3dHpqbTBOQThTCjhkYUtqbEFNQWprK2IrQnRkbWRJSUtYYWg2WHhQMUdvVFJBeHJUTkJRTzJDdXNOSzhjQkNXS3QxTjFDRTd5a0wKT3NEenpGZ2l4bGlEbW5jVmoyOWRkMjYxTllhVUxEb3FBQTlubG1NZFVRbG15cTlKS0RCK0JYbk1EK28vSmE3TgpGOFZDVW0yNW9leUJZZWdQaXRTcUNVSnY0YVoxd3h0SFd4dXVoV1ZYOGppRURRVHNnS0dmN2ZCMFViY1hPQ2k1ClQxZEFjWWFKcmVvaUV0dTF5dkFTSGpDZlFTQ0lEWHpxSGxRVE16NTJ2RktWZUdoVldPNzlEaEcrTG5XTW41QVEKM3dNYWNuZHNTVzFza2psQXpaWEJqZW94cnU3SGZZamFHKzY1UlFJREFRQUJBb0lCQVFEUjVMNjRzdzF4d0Y3Sgplb2JLeEoyS0xWbHlZWW8zS3dicXlRWDQxVTE4SThzb2NrYUhwWm41YWg5OHlYSU1vckgxMk44dHRuQUU2cmozClJXTllHQWs0Yk1KdzZUeVFsVEloQmp6VGtpTERFZlVZZnZ1cS9nUkRPZHArdlh6ZXdzcXBGRXQvNlA5cm54aEgKc3NBV2xaTjQzaW5lKzh2bDlWMmEvSWlNS3VGTEt2UmFVSGtrWnFpRFFYd1pOTkFHRkhOWHdjelV1UjlwakJuVAo2TWthOVV3dmZtZlFNS0lWMm9sbUlvaFlOYzA3aEFwaU5KNHNJYnNRbmwrQ05taVNGbkFGWmlSODR0SUJXOGt3CjJHN2RGWC83Q2hNdmVua2VxeThHMnMzZG1ZTlFkR3pLcFhUY3dEYmkzVCt3YitCdFpEWUwvY0tXSDRPejJacU0KWUQvWmV2bnhBb0dCQVB4YzhKcUhzYko5dzdVR0h5QytSY1ppUjRydWRqaXhyYWFxNkdxRWw4OTlrVUczZzRZSQpCSFR3VnBodEtNcEhud2VVZ2xQeHFONGNuMW8wWi9ERUF6dFkzK2tKam9qM0NtNkY2akRHdGwwYy9vQWxaRm13CjRBcXU3bHdTYnI3UVBVV2plVkRjTlJaZE1xbXNRK0pHOFB4MXlETkFLZG9UNlJKcWU2TFZ0a0xMQW9HQkFQQUsKWDRUU1JsZVR5KzRNcUhmdVkrZU5aSCtmelBSdW5RQjh0MmxqeTR6K1lCZzFXWnpoQjNJbklaOTVVYjRVWUNhNQpCWCtGWXRHbURLYjBoaHZIdVlUeDR1R2pXb1daSzQrd1U4bGRnL2lRV1Rzb2d3K0svTzVucCs4SW1xbGN6OUI1CmV4SHlWSFN6U3Z3Vm9qd2w0ZllHZ3B3bVVjeXRuam5MbkRKUkhLSXZBb0dCQU9lZWpaM202T3IvanIzNHpsMEoKQlpWYzRuamJBRnBzaVFxdFZmOWRqcy83V1hSTmNFTjEzRkZQdk1yTmRXQ2lkNDFIZW81OUFCWkxndDRSdDB3OQpPeElmTWZMNnVIMXc3M3dkSUtKLzN5UjYxZ0xiVHMwYkQ2WCtnL3F4V0Q5OWRKOFR1T2JFRlYxZlVINTJBeUFOCktHVXQzUDljNW95bk5ZV1hnYjRrRTlJZEFvR0JBTzM4V3RlRTR0alJYODZVSGpOSjF5TXJ2QWdNbDFlQWs0aDQKSGlBUElUQ1l3dzA5VjZ1Q0w2K3R2Rmd3SUNza2FHLzc0TWVkcDJ2VUJaZEJ0L1N5Lyt3ZkphSXdJdjl4N1E1NAo4NWtoYmtaeVZ3V2dGTkRFTENEeUJEMnBlaTJRSnptNk41cURkOWg4S2t2ajV3VmJTYnh5bCt2WTBpRHJ3WVByCnF1RDRLanRoQW9HQUJJaGlQL3lMR3NkL2pHelcyaURQRHFydC9uVVdDbkI2NURRMWUvS3QyMUFiUFdxcktqVDcKcjJDUHEzZTd6cGxuL0VTcUd5WUpNYWpWZWlteTZUN3hiN1hWQlRvWWhwUVFkWEpxVFVjSENJWkNkelJxcVFPMgp4ajAxRVIzRUYzWjlreEhUTFRXU29MM3J0L1R6MHppbnc3Q2xHZk8wdEk1MXlocmxHbERrVXNJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "openshift-master.kubeconfig": "",
        "openshift-registry.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lCQ2pBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RRMFdoY05NVGd3TlRBMgpNREUwT1RRMVdqQkFNUm93R0FZRFZRUUtFeEZ6ZVhOMFpXMDZjbVZuYVhOMGNtbGxjekVpTUNBR0ExVUVBeE1aCmMzbHpkR1Z0T205d1pXNXphR2xtZEMxeVpXZHBjM1J5ZVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU1SWi9TZnNoemIrME51bmVjclhqbldvangzOEhoRk84ckZYcElSSjdmOG5YOGQzR2NiUAphQzhSdWpKdGpCTzJ5UjVTTll2TkZhK1EvemtuOXVxeXBEYUs1czRvRjZTejErc1d5Q3VUeXpLbnBqNnJLaEFkCmJlYzkydCtEZmRsajBDWnlhS3BCNGExcmxPaTYybnpZYWJ1dE9Wb29vWnJaZjdVSzFJU0gwUW8xUmRmT20wVWcKT3N5eGFXV0tkSURJaHhuL2VyQUI2SjR1KzlRV1JvTnRUSVlKWFRNVGFNZDlXWVJPdWYycDFGMVFtdmNlN0lxWQo0bEludUExcFRrZXRxSk1HaGoxdnJkRjJFaHZRaGQ4UmMvOTgzUUNpSnBzemlKQzdWVm1ScHNJSVJ3OU81MUFOCjFoQ2FBMkNnbDdiT0dOOFdFMEFUZ0FJMEZzdERGd1hwQm9zQ0F3RUFBYU0xTURNd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBQm9RTW52aFllYlZuV0pSRm5xeTVGT2I4M0QrUkxGZ3FsakNCYTRMcUliRzhDVk1SMXlICmF2aXFRcjNla3J6cWZERDhCWkNXQlBiVjRGOUtKaldsdFBIcFhvelFKNlQ0Q1lQNGVIWUJXQVQzUGxXK3g3c0MKS1p3SWxpOHFnQTRCUGNwU3pHcXdZMC9aeGtqbDdmUEZmTlUyRksyazFTSWw5Q1RpNjlmOUt4ZnhQWnJFUS9UOQpHazQ0a204ZnNqRlZTKzBtRW1OZHZqRk9wdE9MeGJoUmQ5MURvWjRwUFdUMHVOTmdPVFU5RHpJYXprdHQ1YnJNCjdJRmhReFU1bnBKaTdQbGx3UWdwS0t0cTlGOEJyQVl3dTY5dzhvWU9mektXOXIwbDdLYlczR0MrVmt4V1Z3ekkKUDBzYjJ6KzFNb3FhVGxUYTdBc09aWmV2UG05NWs5RFk5Qmc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "openshift-registry.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEZuOUoreUhOdjdRMjZkNXl0ZU9kYWlQSGZ3ZUVVN3lzVmVraEVudC95ZGZ4M2NaCnhzOW9MeEc2TW0yTUU3YkpIbEkxaTgwVnI1RC9PU2YyNnJLa05vcm16aWdYcExQWDZ4YklLNVBMTXFlbVBxc3EKRUIxdDV6M2EzNE45MldQUUpuSm9xa0hocld1VTZMcmFmTmhwdTYwNVdpaWhtdGwvdFFyVWhJZlJDalZGMTg2YgpSU0E2ekxGcFpZcDBnTWlIR2Y5NnNBSG9uaTc3MUJaR2cyMU1oZ2xkTXhOb3gzMVpoRTY1L2FuVVhWQ2E5eDdzCmlwamlVaWU0RFdsT1I2Mm9rd2FHUFcrdDBYWVNHOUNGM3hGei8zemRBS0ltbXpPSWtMdFZXWkdtd2doSEQwN24KVUEzV0VKb0RZS0NYdHM0WTN4WVRRQk9BQWpRV3kwTVhCZWtHaXdJREFRQUJBb0lCQUNsaVlpWXBCekxETUZncgppMU1DYmNkRXVLMTBOdzRrMnFnZ05jK2dHV1orOFFRRWlVMUs1OFdMOGZldytTWXFqMmN4b3BHTnJ6VnExVEJCCnlSd2NmTm4yR3NGMjE4emlEdTlBeFAzU1Q3Q2tmemlVTVBCbWs0UjZtQWdtR2I5WTkwVXpOZlkwbnBGRHJJWUUKNUFvT1B2TE1odHNHMTFEZzZMYkt5cElJWWpuSk01cDdzVURTYktWdVBGZzVkTTJXbTFTMXZXcnZlVlY0SU1qVgo2eEhMaTJSTDM5b2VCV0toNWV1MVZicmFxMTlRMUJPMnlHb1hNcWl2bFpMamNlcVhDcGxyL0NHZERuYVNMU21OCnlsL1VGYTdTaVJsRnV0N1FpQXFPQ2tFeUJ6T2FhRE1XT2lZa0lqU282TytySVdOYnVGMVhKdEw5T2dwYkRkMlQKTzdML3Iwa0NnWUVBK1ppajdabEtiQjRJZk96azE3enlMOERmM1lFV05ESGc2N1g5RnIwRmFGWU9wM3pob0NvLwpoVUdnT3dnOXBoZFkvSzc5c2tEdGxObnlBUU1TOUJrYk5waWcxOW82aGdKYlk0bGs1ZGJWRy9ROERzRGJXLzZxCm10NEhqbElHNllQTHU0ZHArQVkzYXVQSWxiYjllaTR1QlBKZ2dPeVdSRjBwRnFudzQxQTFGNGNDZ1lFQXlXT2kKZTNrK3p1T0psbytod2Nac29RTVNmWFhaZTBrN1B6clVtTVZ6QWdLcEd1ZEttK0dmdjZpbG5FR2EvZGllQlcySQpVMnZWU1B5V282Q1dEZ0p4OC9GOWlyTXMyZWJ0R0ZQb21LVDdTRjNWVlN6RHV4YkttRFBYTGZWM2ZvMUp3MDZMCllLc0tFSDdobU13Z1YvWEVCTnNoVWlsT2VSY1lUYVNsWDh2T1VkMENnWUVBdHBVUFRhNjEvMU1VK0hXK2pZYWQKVDR0eTk3RUhVaFV1cUo3UFRnUGw0Y1lhSURFOVI1SEFON1dqQmF2b2xRZzlRMUtyS090UUlIUXlFTVZ6NXZZNgpydnlGcElEeUVMZkdySkNFSzVHMUFTYnZqQWRPTUFTaVBubXU0MUJqMkF4ZVM0Y3FZSklEbGdDYzZkQWJxblgvCm1nVEh6V2ZFSUt4WmMwZkxmQzFmT1I4Q2dZQVM1ZnlyWlpkVlJ0ajBmZ29KNnhycWlTVkZETGdaNzZkVnFhbWwKcEhIRWNJZDU5TloxaGxpOVhaQWM5N01adXlncERqeEt4OFcrRWFYNU9PcWI2ZkxUbDRmV2FqWDlSTVJmRWhDegpzbGU2Vk1QZU9GTXR6VmU1ckxPMnBtQk9TZWZ3SWdER1U0YWdRYWZkOU5uY0p6Mzd6cXh6ejFpRDJIejVYRWdBCmsxbUxLUUtCZ0JSYnMrd0NQNmlVcjlnb2RNNkJDRHhHWGtrSHRiajlDSzdVZkl5OTdFUGFGdVQvWHRnVnNCOUEKS2FjT3kycU1sSlM2QytGeEJWd2RvSm5OL0lZd1I1QzJPUDRpc1IyaXJTV254YWtQLyt0bG5YSXRmNGRxbjNOSgpKRGtGR1RBdU9ObWdST0R2N1BKa3UwV1IvbFRtZWQwbHJpbjUrc1dzTkVETmVXcE5SaENFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "openshift-registry.kubeconfig": "",
        "openshift-router.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFVENDQWZtZ0F3SUJBZ0lCQ1RBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0dmNHVnUKYzJocFpuUXRjMmxuYm1WeVFERTBOakkwT1Rrek9ERXdIaGNOTVRZd05UQTJNREUwT1RRMFdoY05NVGd3TlRBMgpNREUwT1RRMVdqQTdNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZjbTkxZEdWeWN6RWdNQjRHQTFVRUF4TVhjM2x6CmRHVnRPbTl3Wlc1emFHbG1kQzF5YjNWMFpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFh0aFhNSnhLN0trQU5tVU1wOUFyOTRzdXJnNnRIdlUvWUtzM0o5Ymh2dEJ5bi8ydUoraStpMlRHKwpoNjc4THN1K3JqQVRYcWhHUmN0RkF6dFV4VDJoc1FjVVBJNkpONGpDb0YzQzk2endQMnNwbC9KdUFaTk9RNmIyCmMxK3AreTl3dkw1R0JmTmNaQzh5V1pqa3VQSkdHcUV6NEU5TGJqVXNsWXhNQmZFaVVlbG5tVjU1SDZ4Nndqck8KSGdmTEFoNHc1RWJQZDdHdi96YnJwakJuRDB1M1ZQSk10NVJEaTdSUlp5YWwvMmc0WXRpWjZINzZlMm9Mcm5uNApDOW5HNUk3Yi9xWGdKTDlaUDg5enRkZm5Vcld4a0w1dU5ZaGJrNHRRRXZHeHgzUlAwTDBuUUpvNnBsWDNVZGZvCitjbzlVV0JueG5NbTdvM0dsb0oxYUxVSHBlb1RBZ01CQUFHak5UQXpNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFCMXVsdTI2Nzg0MkFsZW5rdDVwRUROUnp5NktMOXJnKzl5dnR0bkdKOGoyMHVhZENSODRBbW5ad1RJCjc3ZzRKMkRORzA0TFlXNFRpMmVNVStVeTROYlAyUlNHekJ3eVR6dDUzZ04rYjZPbS8wYkNpTm5WOFduUWxBVUEKWkhrdU5EZWJvMXhGZHU0WncwU1hYOXVvSXc4YWVxcFpaVmNRLzFMdi9HWjFuckFxeWxoMzF5U3RIYVArdjRtYgpTZmY5anowdzVtbHBSbUk3ZDRtanJZU010Tmw5SCtIcE1Bek5zbFg0NXQvTE1YY1RkQ2U2eXczQW1IVGFPcGljCnFLLzJ3YjhjaTVpNk0wOUc1T1AxSjNOUC9XOWVvcldaVVBBaUdEdVlFczBVTFBGdU1lVXV2eW9oWnF2R2lmbmEKZWJLUjE3MGpyZWlGR0FEb0lpQldKc2xZYVd0QwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "openshift-router.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTdZVnpDY1N1eXBBRFpsREtmUUsvZUxMcTRPclI3MVAyQ3JOeWZXNGI3UWNwLzlyCmlmb3ZvdGt4dm9ldS9DN0x2cTR3RTE2b1JrWExSUU03Vk1VOW9iRUhGRHlPaVRlSXdxQmR3dmVzOEQ5cktaZnkKYmdHVFRrT205bk5mcWZzdmNMeStSZ1h6WEdRdk1sbVk1TGp5UmhxaE0rQlBTMjQxTEpXTVRBWHhJbEhwWjVsZQplUitzZXNJNnpoNEh5d0llTU9SR3ozZXhyLzgyNjZZd1p3OUx0MVR5VExlVVE0dTBVV2NtcGY5b09HTFltZWgrCitudHFDNjU1K0F2Wnh1U08yLzZsNENTL1dUL1BjN1hYNTFLMXNaQytialdJVzVPTFVCTHhzY2QwVDlDOUowQ2EKT3FaVjkxSFg2UG5LUFZGZ1o4WnpKdTZOeHBhQ2RXaTFCNlhxRXdJREFRQUJBb0lCQVFDeGlLano5d3lSZ2pwcApkc1F5V1NwYXZqZ0dGejMyc3padG9Qenh4UXhnMHducXNtc2RpZzErcCtjcStwem43Tk8vUWJsTGw5SkMwOXB5CkdERFNtZXNaa290Uyttd05QdW1OMVZLVnppWkZMTXpUMUx5d0VSZmRpQXg0TlloOGE4RWx0aEdicS9ZWkNsTlYKeXl2c3d0S1RKQU9jb0haaWpIZXpFL245Nzc0QUVZdHZKaWdrMEQ1MW1zaFM0TG5OeTJiR3hiVlg2Q1U3alNXbwp1Tzh4R0l6Q1RnQVFyOU9lazhUMDNyR3ZoVXM4Lzc4dlJXL3dCVlRtZnRjd05PUlBCTHppM3pCakhIVVc0cGpnCkt3WDV6YjBkb29vcE1Gdml4cTgrcm45V1AyOGV0ODJGSWF6VmpnVEFHSm1IRDRLZVIrR3Awb2JMYnpZTXBuSmQKY1FOMVFOMVJBb0dCQU9XaFZ4bWVicVpqcHdGR2NvOU1kYWRuQ0J2c3F3bzRsbzdrcWdScWhWZXNaWEtNa0dYbQpyOWZtU2JrZ0lKWGxubU53TS9OdkNFSTJwVWt0NmFMMFo3QmdrcHNYSUtzK1RnNnVTYmlxdm9iYW80VTZUZHFhCkJGS1ppYmNsUWkwcVN0ZHNJNlppejlmUXd4QnVWRG5vQ1BEc0FrUDlaTnVmdTN5S0xxMlVuRkJmQW9HQkFQQjcKamtjZVMxMGxSY2VITUxGb2ZmNnpHRkgzeDY4cWpCWHVRU3dlaGRnQjlpNE9VRmF2TjdZa1lSLzFyUzZzWEg4SwpKazQzajBTRTJ1RDJrNXVRdGNrc2I0S25VR0NaRktFUUlMdWNOTmk4dGRpTEN1WmMvcFlHc09EWHBpNTNOY2ZUClVvNWZpOThwaGI2SGhlRTMvTEl3RlN1WDR3TWM2aWlkTVZsS21UTE5Bb0dCQUtCQ0MzR2J1b2x4UHRxSytlUzgKYmRnWTlmWFhKRCtMNHJkektwek9ZcVVmY2VXUjZDelY1SjcrM3pET0ZTL0lBdFJQT0ZLS2lPNzlDRG1jUzFRbwowanlzQ1dVbnJPc1dIby9zWHhMOFJ1QUNzdUNHSWxPUDdiaGY0MWJvTDlrcGpQWHZTS29VaUEyTWFyYUs2VWxJCmdRVHpFVm0xL0sreU9MemdDMWVsUWJwdEFvR0FiLzk3SWRBUUZVOVlralo2RFFXM09EbThwK0FZRlpKaEw0MkkKdUwxMlpFVjFtN2w2M1FRNWxCQ1pVME1kNXRETE96ZEU0OFNvYXFiZE1VeGxMbHhVN1Y1T2lMRFhsRVYzQUJQOAp5cU5UVVdXQjQxbk9ONzh6cWpkdmhTZXA4NVg5YkJVVks4MS8zT3ovcHQ2REVZTDdveGtWb3ZuWDlna3ZYTDdvCnpzY1pWamtDZ1lCYXoxMkI1amhwM0VtVlpaV1Q4blA1bnl6Q1pLUGxGcnhLanNYMS9Qb3ZyRU5IWnU5TERwRDgKZnpSRDhyNzNHQUpiL1RlN2VMdjZ5RExSWXA5aHREcW5ybHdkd1ltY3lKVkRFUWtTbWlPdm50ZmxZRFhVRDFTOQppR3FrQ1dCbnZ6c3lCQ1p5K0hkMGt6Z2REakNBcHZIRVczd1pjbjFLL1M1L0dFRlE3NEVOaVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "openshift-router.kubeconfig": "",
        "policy.json": "",
        "serviceaccounts.private.key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeGNlaEFRazhHK2FXcDErS3BrV05sQnVteUFUdEl4MDZqOStTT05BUjRkT0xORHdCCk40RkNmOEdlZXZwVDNxSTRPTkN4MllaRHZjbXV5OG5TaVlsZXNwR3dUSGNLMmxWRlRrbDl1WUNtTFBQU2dqUi8KY3F0QThKcEhuK0NmUDdRc3l0ZmNxYmFKSG81VXp5cEVNeHRjZVVlSFpwNnhjY1lrYjN5bWgxWkNzOU5yWW1oMApoWHZ4T214TnA4bWUyc2NTWTVwZTRhYWUzblMxTTJNZlVBTWtkamJzNWYvZFkyVG9JNUhab1BxTVltWUFZWFY4CiswUUZ6TThjeGYzKzJJTEVLVTZJTEhYZ3l6akpBdnZMcE9tTXlWTTVvQm9YeEl3YVljeENiZC9NMGtwTkdkQWcKODhBL25GNWwrK2YxSlFTSGVQcDY5SlE3TXQySENGVi93NXRSWlFJREFRQUJBb0lCQVFDK012RzUzbGlvK0VMdgphT2tjWjR6MDN2YXdLbFNtelNnUlRrNy9SZEc4bThTbUVnS1ZqMEFWUG0wYkZQdHRBaElSU1ZtUHVCZ1RQdzVUCk9wNjIxNTF6R3JveGZ0VzREQUxmZTd0bGxydTRSUzZ2T3E5SjVqbElhUVh5VVlDME1hQlYzZXQrWm1WTk5sR0cKL0wyamJHK3N6a1gvUVNPaUo0dklqMVpTbG5rRkZ0MkEyblJlbmlrdWc5TmxYa3ZHQ2t1ZjJNQ0d0TWtIUHM5Ygo2Nmh2R0NYazBESlZaMWQ3SHpaYWZZcTNCM3dCUjBZYWVYTXY1SVBsZGhxWG92RFpTajdaRXdKN0FnNS9tejUyCmh0eDFkSm5GNmo1VzZuS2d6QURJcFR3QkFYVWkrb3p3cHF0eFRacGVZZjJIQlBjeXJKM1BsdnBYZXpXVUdZNFEKckpoalRkTGhBb0dCQVBMNjI1bVBJS0ZkcUM0QzNGV3lvVnArVkQydnNGRllRUDVqV3JUYWYzVVhhM0VWWHJzUgpid09QYndaeEVXREU4MVBabDV3N29hbmtLd1dIOFdXTmw2Q1NTbFRSTk95eGtqR1pFaEgvV0hrY285SnhiK0dKCjZ2aG5NS1lyZ3NGeExNRDk5RzEvdmxFUVlCSFBMaFpYdXBzdS8vNEVMemgvM1hMQm9WbkZTRW85QW9HQkFOQmcKdWZjMVZvcEIzTG9PU3hjYTMzSHpEdld1dEl2UEdOL3owM3JnejRkTXpPUjh0Mk83RlU0M21VUy9NM0llT0hsSgpmWCsrMDcxNnNhcFdGK2UwMEw2T3RkK0U2UUg0QlBrWVFYVXgxTkRlNnhxQmFoU21BYmpOVW1hR0RZVTN2Z3g3CjFYcFJvS3JZK1FkR2NKZldtR1I2cTBrazVuZHJqellJbGpWQ0p4NUpBb0dCQU9nSEkrTk02VlVPOGNZV1Z6L0MKMkJCcGFKcUxoaXozd1FEcjhiZVltM1ErVEF4dDRzdHl4M2MzNWtiWmZFWFRiYVdadVF5cGFTU3FUV2IzdlU1RAoyeEtzQUMxa3BreU0rVlZCbmg3dm54WHdnb1E0YlNXTUpZVFdUWCt4Tnlqd29WTWViK2FNd1RuNkVET1JpNm9zClZuZFFkNGFqaWxCQzBqNStwMHpwZHJIbEFvR0JBSkZQd3A5MzNKK1JpbUZjOGxSc2N3RzlvK01FTC9lSE5pdUcKbHlXTGZHMDN5M0pTM25oMzBFVzVVL0t5K3lkTGw4cE15MjI0SDJSMUdVeFZ1Vm5scCtRYkZRMklYQXo1Yms1ZQo4ZGJPSjBCNUU2NXFMUlcxSm1JL0hJVk9Xa05hT2ZmdXExSWZkbEZ0K1V0dmZia0U5MFNxbnFQbFRhcGRvWUxtCnZnanAxdW14QW9HQkFMbU14RG50dUhKNzd4cGJYK2dGOEswRWFhdHhHMStrUUxRMUEySjJUWElqampFS3R2bGsKYzNwNjA0TEtvRWx0VG0wc3lEeEQybUZvRks0aW1BdlZqOWZWUlUwRllDS1Ira2JRMXkzWWR5VG5QWjRhV2Q3ZwpGeTFQbkh1TkY0aVVRQ3pNVVdEQ1c5UDAzRk5HcjlKTjRBOXlxSnpRVnJzT0o0UkVFdFVKM2Q4cgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "serviceaccounts.public.key": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdGlDYkdrODYzaVZNd09GRFowSnYKUXZ1aTVmWHMybG9Rd0lGaXpwOGhWczUrRDZoTS9FMDRkREJ0VFRtUkNCa0RjaWFJaVY5RUhFRG1QQ241YmpVMwo4TnI2dDMxTTFrY3hjWWpaWDNBQTFEd09tekw5VnZMcVJEYm11OHBrUHF1MWpnK0ZrRlNJdVlBY0kxbUhGVHNMCmxXWlBIQ0dFWnNaMytJTUJBalpoL3ovZWpnMEJNRk1pdUJYVnhIbUFHeUVNVm5JOUtHYkRod3FvYmRDNTIrYXgKQzBvVWFtb3UrRkxZMUJ3Qkc2eEdNQ0dRSytSd3BEL01SVkxnUUpzWjVsMm1uaUx1cW1vWXB1N2dxd0Z2b2JlMApQY3lQb3lQaStyOUtJYzlXSjl0VHZoRmltTzJkY090b0VVVmxLZmtFZU81R3Z4bUt5Z3hUUk12THVTL1U0V2d3CnJRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
    },
    "type": "Opaque"
}
